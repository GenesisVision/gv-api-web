/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoreApiV10);
  }
}(this, function(expect, CoreApiV10) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CoreApiV10.TransactionDetatils();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransactionDetatils', function() {
    it('should create an instance of TransactionDetatils', function() {
      // uncomment below and update the code to test TransactionDetatils
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be.a(CoreApiV10.TransactionDetatils);
    });

    it('should have the property currencyFrom (base name: "currencyFrom")', function() {
      // uncomment below and update the code to test the property currencyFrom
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property currencyTo (base name: "currencyTo")', function() {
      // uncomment below and update the code to test the property currencyTo
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property programId (base name: "programId")', function() {
      // uncomment below and update the code to test the property programId
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property foundId (base name: "foundId")', function() {
      // uncomment below and update the code to test the property foundId
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property entryFee (base name: "entryFee")', function() {
      // uncomment below and update the code to test the property entryFee
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property gvCommission (base name: "gvCommission")', function() {
      // uncomment below and update the code to test the property gvCommission
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property exitFee (base name: "exitFee")', function() {
      // uncomment below and update the code to test the property exitFee
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property descriptionUrl (base name: "descriptionUrl")', function() {
      // uncomment below and update the code to test the property descriptionUrl
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property fromAddress (base name: "fromAddress")', function() {
      // uncomment below and update the code to test the property fromAddress
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property amountFrom (base name: "amountFrom")', function() {
      // uncomment below and update the code to test the property amountFrom
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property amountTo (base name: "amountTo")', function() {
      // uncomment below and update the code to test the property amountTo
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

    it('should have the property rateValue (base name: "rateValue")', function() {
      // uncomment below and update the code to test the property rateValue
      //var instane = new CoreApiV10.TransactionDetatils();
      //expect(instance).to.be();
    });

  });

}));
