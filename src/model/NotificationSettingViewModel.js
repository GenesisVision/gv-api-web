/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.NotificationSettingViewModel = factory(root.CoreApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The NotificationSettingViewModel model module.
   * @module model/NotificationSettingViewModel
   * @version v1.0
   */

  /**
   * Constructs a new <code>NotificationSettingViewModel</code>.
   * @alias module:model/NotificationSettingViewModel
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>NotificationSettingViewModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NotificationSettingViewModel} obj Optional instance to populate.
   * @return {module:model/NotificationSettingViewModel} The populated <code>NotificationSettingViewModel</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('isEnabled')) {
        obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('assetId')) {
        obj['assetId'] = ApiClient.convertToType(data['assetId'], 'String');
      }
      if (data.hasOwnProperty('managerId')) {
        obj['managerId'] = ApiClient.convertToType(data['managerId'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('conditionType')) {
        obj['conditionType'] = ApiClient.convertToType(data['conditionType'], 'String');
      }
      if (data.hasOwnProperty('conditionAmount')) {
        obj['conditionAmount'] = ApiClient.convertToType(data['conditionAmount'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Boolean} isEnabled
   */
  exports.prototype['isEnabled'] = undefined;
  /**
   * @member {String} assetId
   */
  exports.prototype['assetId'] = undefined;
  /**
   * @member {String} managerId
   */
  exports.prototype['managerId'] = undefined;
  /**
   * @member {module:model/NotificationSettingViewModel.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/NotificationSettingViewModel.ConditionTypeEnum} conditionType
   */
  exports.prototype['conditionType'] = undefined;
  /**
   * @member {Number} conditionAmount
   */
  exports.prototype['conditionAmount'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "PlatformNewsAndUpdates"
     * @const
     */
    "PlatformNewsAndUpdates": "PlatformNewsAndUpdates",
    /**
     * value: "PlatformEmergency"
     * @const
     */
    "PlatformEmergency": "PlatformEmergency",
    /**
     * value: "PlatformOther"
     * @const
     */
    "PlatformOther": "PlatformOther",
    /**
     * value: "ProfileUpdated"
     * @const
     */
    "ProfileUpdated": "ProfileUpdated",
    /**
     * value: "ProfilePwdUpdated"
     * @const
     */
    "ProfilePwdUpdated": "ProfilePwdUpdated",
    /**
     * value: "ProfileVerification"
     * @const
     */
    "ProfileVerification": "ProfileVerification",
    /**
     * value: "Profile2FA"
     * @const
     */
    "Profile2FA": "Profile2FA",
    /**
     * value: "ProfileSecurity"
     * @const
     */
    "ProfileSecurity": "ProfileSecurity",
    /**
     * value: "TradingAccountPwdUpdated"
     * @const
     */
    "TradingAccountPwdUpdated": "TradingAccountPwdUpdated",
    /**
     * value: "ProgramNewsAndUpdates"
     * @const
     */
    "ProgramNewsAndUpdates": "ProgramNewsAndUpdates",
    /**
     * value: "ProgramEndOfPeriod"
     * @const
     */
    "ProgramEndOfPeriod": "ProgramEndOfPeriod",
    /**
     * value: "ProgramCondition"
     * @const
     */
    "ProgramCondition": "ProgramCondition",
    /**
     * value: "ProgramExceedInvestmentLimit"
     * @const
     */
    "ProgramExceedInvestmentLimit": "ProgramExceedInvestmentLimit",
    /**
     * value: "FundNewsAndUpdates"
     * @const
     */
    "FundNewsAndUpdates": "FundNewsAndUpdates",
    /**
     * value: "FundEndOfPeriod"
     * @const
     */
    "FundEndOfPeriod": "FundEndOfPeriod",
    /**
     * value: "FundRebalancing"
     * @const
     */
    "FundRebalancing": "FundRebalancing",
    /**
     * value: "ManagerNewProgram"
     * @const
     */
    "ManagerNewProgram": "ManagerNewProgram",
    /**
     * value: "Signals"
     * @const
     */
    "Signals": "Signals"  };

  /**
   * Allowed values for the <code>conditionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConditionTypeEnum = {
    /**
     * value: "Empty"
     * @const
     */
    "Empty": "Empty",
    /**
     * value: "Profit"
     * @const
     */
    "Profit": "Profit",
    /**
     * value: "Level"
     * @const
     */
    "Level": "Level",
    /**
     * value: "AvailableToInvest"
     * @const
     */
    "AvailableToInvest": "AvailableToInvest"  };


  return exports;
}));


