/**
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ManagerDashboardProgramsFilter model module.
* @module model/ManagerDashboardProgramsFilter
* @version v1
*/
export default class ManagerDashboardProgramsFilter {
    /**
    * Constructs a new <code>ManagerDashboardProgramsFilter</code>.
    * @alias module:model/ManagerDashboardProgramsFilter
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>ManagerDashboardProgramsFilter</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ManagerDashboardProgramsFilter} obj Optional instance to populate.
    * @return {module:model/ManagerDashboardProgramsFilter} The populated <code>ManagerDashboardProgramsFilter</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagerDashboardProgramsFilter();

            
            
            

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {module:model/ManagerDashboardProgramsFilter.TypeEnum} type
    */
    type = undefined;






    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
    
        /**
         * value: "All"
         * @const
         */
        "All": "All",
    
        /**
         * value: "Active"
         * @const
         */
        "Active": "Active",
    
        /**
         * value: "Finished"
         * @const
         */
        "Finished": "Finished",
    
        /**
         * value: "Pending"
         * @const
         */
        "Pending": "Pending"    
    };



}


