/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Period from './Period';





/**
* The BrokerInvestmentProgram model module.
* @module model/BrokerInvestmentProgram
* @version v1.0
*/
export default class BrokerInvestmentProgram {
    /**
    * Constructs a new <code>BrokerInvestmentProgram</code>.
    * @alias module:model/BrokerInvestmentProgram
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>BrokerInvestmentProgram</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/BrokerInvestmentProgram} obj Optional instance to populate.
    * @return {module:model/BrokerInvestmentProgram} The populated <code>BrokerInvestmentProgram</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerInvestmentProgram();

            
            
            

            if (data.hasOwnProperty('isTournamentAccount')) {
                obj['isTournamentAccount'] = ApiClient.convertToType(data['isTournamentAccount'], 'Boolean');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'Number');
            }
            if (data.hasOwnProperty('feeSuccess')) {
                obj['feeSuccess'] = ApiClient.convertToType(data['feeSuccess'], 'Number');
            }
            if (data.hasOwnProperty('feeManagement')) {
                obj['feeManagement'] = ApiClient.convertToType(data['feeManagement'], 'Number');
            }
            if (data.hasOwnProperty('feeEntrance')) {
                obj['feeEntrance'] = ApiClient.convertToType(data['feeEntrance'], 'Number');
            }
            if (data.hasOwnProperty('lastPeriod')) {
                obj['lastPeriod'] = Period.constructFromObject(data['lastPeriod']);
            }
            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('tradeIpfsHash')) {
                obj['tradeIpfsHash'] = ApiClient.convertToType(data['tradeIpfsHash'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('managerAccountId')) {
                obj['managerAccountId'] = ApiClient.convertToType(data['managerAccountId'], 'String');
            }
            if (data.hasOwnProperty('dateFrom')) {
                obj['dateFrom'] = ApiClient.convertToType(data['dateFrom'], 'Date');
            }
            if (data.hasOwnProperty('dateTo')) {
                obj['dateTo'] = ApiClient.convertToType(data['dateTo'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('investMinAmount')) {
                obj['investMinAmount'] = ApiClient.convertToType(data['investMinAmount'], 'Number');
            }
            if (data.hasOwnProperty('investMaxAmount')) {
                obj['investMaxAmount'] = ApiClient.convertToType(data['investMaxAmount'], 'Number');
            }
            if (data.hasOwnProperty('ipfsHash')) {
                obj['ipfsHash'] = ApiClient.convertToType(data['ipfsHash'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {Boolean} isTournamentAccount
    */
    isTournamentAccount = undefined;
    /**
    * @member {Number} period
    */
    period = undefined;
    /**
    * @member {Number} feeSuccess
    */
    feeSuccess = undefined;
    /**
    * @member {Number} feeManagement
    */
    feeManagement = undefined;
    /**
    * @member {Number} feeEntrance
    */
    feeEntrance = undefined;
    /**
    * @member {module:model/Period} lastPeriod
    */
    lastPeriod = undefined;
    /**
    * @member {String} login
    */
    login = undefined;
    /**
    * @member {String} tradeIpfsHash
    */
    tradeIpfsHash = undefined;
    /**
    * @member {module:model/BrokerInvestmentProgram.StatusEnum} status
    */
    status = undefined;
    /**
    * @member {String} id
    */
    id = undefined;
    /**
    * @member {String} managerAccountId
    */
    managerAccountId = undefined;
    /**
    * @member {Date} dateFrom
    */
    dateFrom = undefined;
    /**
    * @member {Date} dateTo
    */
    dateTo = undefined;
    /**
    * @member {String} description
    */
    description = undefined;
    /**
    * @member {Boolean} isEnabled
    */
    isEnabled = undefined;
    /**
    * @member {Number} investMinAmount
    */
    investMinAmount = undefined;
    /**
    * @member {Number} investMaxAmount
    */
    investMaxAmount = undefined;
    /**
    * @member {String} ipfsHash
    */
    ipfsHash = undefined;
    /**
    * @member {Number} balance
    */
    balance = undefined;






    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
    
        /**
         * value: "None"
         * @const
         */
        "None": "None",
    
        /**
         * value: "ForClosingDueToInactivity"
         * @const
         */
        "ForClosingDueToInactivity": "ForClosingDueToInactivity"    
    };



}


