/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





    /**
     *
     * @interface MultiWalletExternalTransaction
     */
    
    /**
     *
     * @name MultiWalletExternalTransaction#id
     * @type {String}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#currency
     * @type {("Undefined"|"GVT"|"ETH"|"BTC"|"ADA"|"USDT"|"XRP"|"BCH"|"LTC"|"DOGE"|"BNB"|"USD"|"EUR")}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#date
     * @type {Date}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#amount
     * @type {Number}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#type
     * @type {("Deposit"|"Withdrawn")}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#status
     * @type {("Confirm"|"Pending"|"Canceled"|"Error")}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#fromAddress
     * @type {String}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#description
     * @type {String}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#isEnableActions
     * @type {Boolean}
     */
    /**
     *
     * @name MultiWalletExternalTransaction#url
     * @type {String}
     */





export default class MultiWalletExternalTransaction {

    constructor() {
        

        
        

        

        
    }

    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultiWalletExternalTransaction();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('fromAddress')) {
                obj['fromAddress'] = ApiClient.convertToType(data['fromAddress'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isEnableActions')) {
                obj['isEnableActions'] = ApiClient.convertToType(data['isEnableActions'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    id = undefined;
    currency = undefined;
    date = undefined;
    amount = undefined;
    type = undefined;
    status = undefined;
    fromAddress = undefined;
    description = undefined;
    isEnableActions = undefined;
    url = undefined;






    static CurrencyEnum = {
    
        "Undefined": "Undefined",
    
        "GVT": "GVT",
    
        "ETH": "ETH",
    
        "BTC": "BTC",
    
        "ADA": "ADA",
    
        "USDT": "USDT",
    
        "XRP": "XRP",
    
        "BCH": "BCH",
    
        "LTC": "LTC",
    
        "DOGE": "DOGE",
    
        "BNB": "BNB",
    
        "USD": "USD",
    
        "EUR": "EUR"    
    };

    static TypeEnum = {
    
        "Deposit": "Deposit",
    
        "Withdrawn": "Withdrawn"    
    };

    static StatusEnum = {
    
        "Confirm": "Confirm",
    
        "Pending": "Pending",
    
        "Canceled": "Canceled",
    
        "Error": "Error"    
    };



}


