/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PersonalProgramDetailsFull', 'model/ProfilePublic', 'model/ProgramDetailsRating', 'model/ProgramStatistic', 'model/ProgramTag'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PersonalProgramDetailsFull'), require('./ProfilePublic'), require('./ProgramDetailsRating'), require('./ProgramStatistic'), require('./ProgramTag'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.ProgramDetailsFull = factory(root.CoreApiV10.ApiClient, root.CoreApiV10.PersonalProgramDetailsFull, root.CoreApiV10.ProfilePublic, root.CoreApiV10.ProgramDetailsRating, root.CoreApiV10.ProgramStatistic, root.CoreApiV10.ProgramTag);
  }
}(this, function(ApiClient, PersonalProgramDetailsFull, ProfilePublic, ProgramDetailsRating, ProgramStatistic, ProgramTag) {
  'use strict';




  /**
   * The ProgramDetailsFull model module.
   * @module model/ProgramDetailsFull
   * @version v1.0
   */

  /**
   * Constructs a new <code>ProgramDetailsFull</code>.
   * @alias module:model/ProgramDetailsFull
   * @class
   */
  var exports = function() {
    var _this = this;






































  };

  /**
   * Constructs a <code>ProgramDetailsFull</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProgramDetailsFull} obj Optional instance to populate.
   * @return {module:model/ProgramDetailsFull} The populated <code>ProgramDetailsFull</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('level')) {
        obj['level'] = ApiClient.convertToType(data['level'], 'Number');
      }
      if (data.hasOwnProperty('levelProgress')) {
        obj['levelProgress'] = ApiClient.convertToType(data['levelProgress'], 'Number');
      }
      if (data.hasOwnProperty('periodDuration')) {
        obj['periodDuration'] = ApiClient.convertToType(data['periodDuration'], 'Number');
      }
      if (data.hasOwnProperty('periodStarts')) {
        obj['periodStarts'] = ApiClient.convertToType(data['periodStarts'], 'Date');
      }
      if (data.hasOwnProperty('periodEnds')) {
        obj['periodEnds'] = ApiClient.convertToType(data['periodEnds'], 'Date');
      }
      if (data.hasOwnProperty('entryFee')) {
        obj['entryFee'] = ApiClient.convertToType(data['entryFee'], 'Number');
      }
      if (data.hasOwnProperty('entryFeeSelected')) {
        obj['entryFeeSelected'] = ApiClient.convertToType(data['entryFeeSelected'], 'Number');
      }
      if (data.hasOwnProperty('entryFeeCurrent')) {
        obj['entryFeeCurrent'] = ApiClient.convertToType(data['entryFeeCurrent'], 'Number');
      }
      if (data.hasOwnProperty('successFee')) {
        obj['successFee'] = ApiClient.convertToType(data['successFee'], 'Number');
      }
      if (data.hasOwnProperty('successFeeSelected')) {
        obj['successFeeSelected'] = ApiClient.convertToType(data['successFeeSelected'], 'Number');
      }
      if (data.hasOwnProperty('successFeeCurrent')) {
        obj['successFeeCurrent'] = ApiClient.convertToType(data['successFeeCurrent'], 'Number');
      }
      if (data.hasOwnProperty('stopOutLevel')) {
        obj['stopOutLevel'] = ApiClient.convertToType(data['stopOutLevel'], 'Number');
      }
      if (data.hasOwnProperty('stopOutLevelSelected')) {
        obj['stopOutLevelSelected'] = ApiClient.convertToType(data['stopOutLevelSelected'], 'Number');
      }
      if (data.hasOwnProperty('stopOutLevelCurrent')) {
        obj['stopOutLevelCurrent'] = ApiClient.convertToType(data['stopOutLevelCurrent'], 'Number');
      }
      if (data.hasOwnProperty('isReinvesting')) {
        obj['isReinvesting'] = ApiClient.convertToType(data['isReinvesting'], 'Boolean');
      }
      if (data.hasOwnProperty('isSignalProgram')) {
        obj['isSignalProgram'] = ApiClient.convertToType(data['isSignalProgram'], 'Boolean');
      }
      if (data.hasOwnProperty('signalSuccessFee')) {
        obj['signalSuccessFee'] = ApiClient.convertToType(data['signalSuccessFee'], 'Number');
      }
      if (data.hasOwnProperty('signalVolumeFee')) {
        obj['signalVolumeFee'] = ApiClient.convertToType(data['signalVolumeFee'], 'Number');
      }
      if (data.hasOwnProperty('isForex')) {
        obj['isForex'] = ApiClient.convertToType(data['isForex'], 'Boolean');
      }
      if (data.hasOwnProperty('availableInvestment')) {
        obj['availableInvestment'] = ApiClient.convertToType(data['availableInvestment'], 'Number');
      }
      if (data.hasOwnProperty('availableInvestmentBase')) {
        obj['availableInvestmentBase'] = ApiClient.convertToType(data['availableInvestmentBase'], 'Number');
      }
      if (data.hasOwnProperty('availableInvestmentLimit')) {
        obj['availableInvestmentLimit'] = ApiClient.convertToType(data['availableInvestmentLimit'], 'Number');
      }
      if (data.hasOwnProperty('statistic')) {
        obj['statistic'] = ProgramStatistic.constructFromObject(data['statistic']);
      }
      if (data.hasOwnProperty('rating')) {
        obj['rating'] = ProgramDetailsRating.constructFromObject(data['rating']);
      }
      if (data.hasOwnProperty('personalProgramDetails')) {
        obj['personalProgramDetails'] = PersonalProgramDetailsFull.constructFromObject(data['personalProgramDetails']);
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], [ProgramTag]);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('logo')) {
        obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('color')) {
        obj['color'] = ApiClient.convertToType(data['color'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('ipfsHash')) {
        obj['ipfsHash'] = ApiClient.convertToType(data['ipfsHash'], 'String');
      }
      if (data.hasOwnProperty('creationDate')) {
        obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('manager')) {
        obj['manager'] = ProfilePublic.constructFromObject(data['manager']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ProgramDetailsFull.CurrencyEnum} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * @member {Number} level
   */
  exports.prototype['level'] = undefined;
  /**
   * @member {Number} levelProgress
   */
  exports.prototype['levelProgress'] = undefined;
  /**
   * @member {Number} periodDuration
   */
  exports.prototype['periodDuration'] = undefined;
  /**
   * @member {Date} periodStarts
   */
  exports.prototype['periodStarts'] = undefined;
  /**
   * @member {Date} periodEnds
   */
  exports.prototype['periodEnds'] = undefined;
  /**
   * @member {Number} entryFee
   */
  exports.prototype['entryFee'] = undefined;
  /**
   * @member {Number} entryFeeSelected
   */
  exports.prototype['entryFeeSelected'] = undefined;
  /**
   * @member {Number} entryFeeCurrent
   */
  exports.prototype['entryFeeCurrent'] = undefined;
  /**
   * @member {Number} successFee
   */
  exports.prototype['successFee'] = undefined;
  /**
   * @member {Number} successFeeSelected
   */
  exports.prototype['successFeeSelected'] = undefined;
  /**
   * @member {Number} successFeeCurrent
   */
  exports.prototype['successFeeCurrent'] = undefined;
  /**
   * @member {Number} stopOutLevel
   */
  exports.prototype['stopOutLevel'] = undefined;
  /**
   * @member {Number} stopOutLevelSelected
   */
  exports.prototype['stopOutLevelSelected'] = undefined;
  /**
   * @member {Number} stopOutLevelCurrent
   */
  exports.prototype['stopOutLevelCurrent'] = undefined;
  /**
   * @member {Boolean} isReinvesting
   */
  exports.prototype['isReinvesting'] = undefined;
  /**
   * @member {Boolean} isSignalProgram
   */
  exports.prototype['isSignalProgram'] = undefined;
  /**
   * @member {Number} signalSuccessFee
   */
  exports.prototype['signalSuccessFee'] = undefined;
  /**
   * @member {Number} signalVolumeFee
   */
  exports.prototype['signalVolumeFee'] = undefined;
  /**
   * @member {Boolean} isForex
   */
  exports.prototype['isForex'] = undefined;
  /**
   * In GVT
   * @member {Number} availableInvestment
   */
  exports.prototype['availableInvestment'] = undefined;
  /**
   * In account currency
   * @member {Number} availableInvestmentBase
   */
  exports.prototype['availableInvestmentBase'] = undefined;
  /**
   * @member {Number} availableInvestmentLimit
   */
  exports.prototype['availableInvestmentLimit'] = undefined;
  /**
   * @member {module:model/ProgramStatistic} statistic
   */
  exports.prototype['statistic'] = undefined;
  /**
   * @member {module:model/ProgramDetailsRating} rating
   */
  exports.prototype['rating'] = undefined;
  /**
   * Fields for authorized user
   * @member {module:model/PersonalProgramDetailsFull} personalProgramDetails
   */
  exports.prototype['personalProgramDetails'] = undefined;
  /**
   * @member {Array.<module:model/ProgramTag>} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} logo
   */
  exports.prototype['logo'] = undefined;
  /**
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * @member {String} color
   */
  exports.prototype['color'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {String} ipfsHash
   */
  exports.prototype['ipfsHash'] = undefined;
  /**
   * @member {Date} creationDate
   */
  exports.prototype['creationDate'] = undefined;
  /**
   * @member {module:model/ProgramDetailsFull.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {module:model/ProfilePublic} manager
   */
  exports.prototype['manager'] = undefined;


  /**
   * Allowed values for the <code>currency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurrencyEnum = {
    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",
    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",
    /**
     * value: "USDT"
     * @const
     */
    "USDT": "USDT",
    /**
     * value: "GVT"
     * @const
     */
    "GVT": "GVT",
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "ADA"
     * @const
     */
    "ADA": "ADA",
    /**
     * value: "XRP"
     * @const
     */
    "XRP": "XRP",
    /**
     * value: "BCH"
     * @const
     */
    "BCH": "BCH",
    /**
     * value: "LTC"
     * @const
     */
    "LTC": "LTC",
    /**
     * value: "DOGE"
     * @const
     */
    "DOGE": "DOGE",
    /**
     * value: "BNB"
     * @const
     */
    "BNB": "BNB",
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR"  };

  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",
    /**
     * value: "ErrorCreating"
     * @const
     */
    "ErrorCreating": "ErrorCreating",
    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",
    /**
     * value: "Closed"
     * @const
     */
    "Closed": "Closed",
    /**
     * value: "Archived"
     * @const
     */
    "Archived": "Archived",
    /**
     * value: "ClosedDueToInactivity"
     * @const
     */
    "ClosedDueToInactivity": "ClosedDueToInactivity"  };


  return exports;
}));


