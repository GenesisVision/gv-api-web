/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ChartSimple', 'model/DashboardProgramDetails', 'model/PersonalProgramDetailsFull', 'model/ProfilePublic', 'model/ProgramDetailsListStatistic', 'model/ProgramDetailsRating', 'model/ProgramTag'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ChartSimple'), require('./DashboardProgramDetails'), require('./PersonalProgramDetailsFull'), require('./ProfilePublic'), require('./ProgramDetailsListStatistic'), require('./ProgramDetailsRating'), require('./ProgramTag'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.ProgramDetails = factory(root.CoreApiV10.ApiClient, root.CoreApiV10.ChartSimple, root.CoreApiV10.DashboardProgramDetails, root.CoreApiV10.PersonalProgramDetailsFull, root.CoreApiV10.ProfilePublic, root.CoreApiV10.ProgramDetailsListStatistic, root.CoreApiV10.ProgramDetailsRating, root.CoreApiV10.ProgramTag);
  }
}(this, function(ApiClient, ChartSimple, DashboardProgramDetails, PersonalProgramDetailsFull, ProfilePublic, ProgramDetailsListStatistic, ProgramDetailsRating, ProgramTag) {
  'use strict';




  /**
   * The ProgramDetails model module.
   * @module model/ProgramDetails
   * @version v1.0
   */

  /**
   * Constructs a new <code>ProgramDetails</code>.
   * @alias module:model/ProgramDetails
   * @class
   */
  var exports = function() {
    var _this = this;


























  };

  /**
   * Constructs a <code>ProgramDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProgramDetails} obj Optional instance to populate.
   * @return {module:model/ProgramDetails} The populated <code>ProgramDetails</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('level')) {
        obj['level'] = ApiClient.convertToType(data['level'], 'Number');
      }
      if (data.hasOwnProperty('levelProgress')) {
        obj['levelProgress'] = ApiClient.convertToType(data['levelProgress'], 'Number');
      }
      if (data.hasOwnProperty('periodDuration')) {
        obj['periodDuration'] = ApiClient.convertToType(data['periodDuration'], 'Number');
      }
      if (data.hasOwnProperty('stopOutLevel')) {
        obj['stopOutLevel'] = ApiClient.convertToType(data['stopOutLevel'], 'Number');
      }
      if (data.hasOwnProperty('periodStarts')) {
        obj['periodStarts'] = ApiClient.convertToType(data['periodStarts'], 'Date');
      }
      if (data.hasOwnProperty('periodEnds')) {
        obj['periodEnds'] = ApiClient.convertToType(data['periodEnds'], 'Date');
      }
      if (data.hasOwnProperty('availableInvestment')) {
        obj['availableInvestment'] = ApiClient.convertToType(data['availableInvestment'], 'Number');
      }
      if (data.hasOwnProperty('availableInvestmentBase')) {
        obj['availableInvestmentBase'] = ApiClient.convertToType(data['availableInvestmentBase'], 'Number');
      }
      if (data.hasOwnProperty('availableInvestmentLimit')) {
        obj['availableInvestmentLimit'] = ApiClient.convertToType(data['availableInvestmentLimit'], 'Number');
      }
      if (data.hasOwnProperty('dashboardAssetsDetails')) {
        obj['dashboardAssetsDetails'] = DashboardProgramDetails.constructFromObject(data['dashboardAssetsDetails']);
      }
      if (data.hasOwnProperty('statistic')) {
        obj['statistic'] = ProgramDetailsListStatistic.constructFromObject(data['statistic']);
      }
      if (data.hasOwnProperty('rating')) {
        obj['rating'] = ProgramDetailsRating.constructFromObject(data['rating']);
      }
      if (data.hasOwnProperty('personalDetails')) {
        obj['personalDetails'] = PersonalProgramDetailsFull.constructFromObject(data['personalDetails']);
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], [ProgramTag]);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('logo')) {
        obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('color')) {
        obj['color'] = ApiClient.convertToType(data['color'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('creationDate')) {
        obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
      }
      if (data.hasOwnProperty('manager')) {
        obj['manager'] = ProfilePublic.constructFromObject(data['manager']);
      }
      if (data.hasOwnProperty('chart')) {
        obj['chart'] = ApiClient.convertToType(data['chart'], [ChartSimple]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ProgramDetails.CurrencyEnum} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * @member {Number} level
   */
  exports.prototype['level'] = undefined;
  /**
   * @member {Number} levelProgress
   */
  exports.prototype['levelProgress'] = undefined;
  /**
   * @member {Number} periodDuration
   */
  exports.prototype['periodDuration'] = undefined;
  /**
   * @member {Number} stopOutLevel
   */
  exports.prototype['stopOutLevel'] = undefined;
  /**
   * @member {Date} periodStarts
   */
  exports.prototype['periodStarts'] = undefined;
  /**
   * @member {Date} periodEnds
   */
  exports.prototype['periodEnds'] = undefined;
  /**
   * In GVT
   * @member {Number} availableInvestment
   */
  exports.prototype['availableInvestment'] = undefined;
  /**
   * In account currency
   * @member {Number} availableInvestmentBase
   */
  exports.prototype['availableInvestmentBase'] = undefined;
  /**
   * @member {Number} availableInvestmentLimit
   */
  exports.prototype['availableInvestmentLimit'] = undefined;
  /**
   * Fields for dashboard
   * @member {module:model/DashboardProgramDetails} dashboardAssetsDetails
   */
  exports.prototype['dashboardAssetsDetails'] = undefined;
  /**
   * @member {module:model/ProgramDetailsListStatistic} statistic
   */
  exports.prototype['statistic'] = undefined;
  /**
   * @member {module:model/ProgramDetailsRating} rating
   */
  exports.prototype['rating'] = undefined;
  /**
   * Fields for authorized user
   * @member {module:model/PersonalProgramDetailsFull} personalDetails
   */
  exports.prototype['personalDetails'] = undefined;
  /**
   * @member {Array.<module:model/ProgramTag>} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} logo
   */
  exports.prototype['logo'] = undefined;
  /**
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * @member {String} color
   */
  exports.prototype['color'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/ProgramDetails.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {Date} creationDate
   */
  exports.prototype['creationDate'] = undefined;
  /**
   * @member {module:model/ProfilePublic} manager
   */
  exports.prototype['manager'] = undefined;
  /**
   * @member {Array.<module:model/ChartSimple>} chart
   */
  exports.prototype['chart'] = undefined;


  /**
   * Allowed values for the <code>currency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurrencyEnum = {
    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",
    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",
    /**
     * value: "USDT"
     * @const
     */
    "USDT": "USDT",
    /**
     * value: "GVT"
     * @const
     */
    "GVT": "GVT",
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "ADA"
     * @const
     */
    "ADA": "ADA",
    /**
     * value: "XRP"
     * @const
     */
    "XRP": "XRP",
    /**
     * value: "BCH"
     * @const
     */
    "BCH": "BCH",
    /**
     * value: "LTC"
     * @const
     */
    "LTC": "LTC",
    /**
     * value: "DOGE"
     * @const
     */
    "DOGE": "DOGE",
    /**
     * value: "BNB"
     * @const
     */
    "BNB": "BNB",
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR"  };

  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",
    /**
     * value: "ErrorCreating"
     * @const
     */
    "ErrorCreating": "ErrorCreating",
    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",
    /**
     * value: "Closed"
     * @const
     */
    "Closed": "Closed",
    /**
     * value: "Archived"
     * @const
     */
    "Archived": "Archived",
    /**
     * value: "ClosedDueToInactivity"
     * @const
     */
    "ClosedDueToInactivity": "ClosedDueToInactivity"  };


  return exports;
}));


