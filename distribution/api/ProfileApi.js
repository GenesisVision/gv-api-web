'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
ore API v1.0
o description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

penAPI spec version: v1.0


his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _ErrorViewModel = require('../model/ErrorViewModel');

var _ErrorViewModel2 = _interopRequireDefault(_ErrorViewModel);

var _ProfileFullViewModel = require('../model/ProfileFullViewModel');

var _ProfileFullViewModel2 = _interopRequireDefault(_ProfileFullViewModel);

var _ProfileHeaderViewModel = require('../model/ProfileHeaderViewModel');

var _ProfileHeaderViewModel2 = _interopRequireDefault(_ProfileHeaderViewModel);

var _UpdatePersonalDetailViewModel = require('../model/UpdatePersonalDetailViewModel');

var _UpdatePersonalDetailViewModel2 = _interopRequireDefault(_UpdatePersonalDetailViewModel);

var _UpdateProfileViewModel = require('../model/UpdateProfileViewModel');

var _UpdateProfileViewModel2 = _interopRequireDefault(_UpdateProfileViewModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* Profile service.
* @class ProfileApi
* @version v1.0
*/
var ProfileApi = function () {

  /**
  * Constructs a new ProfileApi. 
  * @function ProfileApi#constructor
  * @param {ApiClient} apiClient Optional API client implementation to use,
  * @return {ProfileApi}
  */
  function ProfileApi(apiClient) {
    _classCallCheck(this, ProfileApi);

    this.apiClient = apiClient || _ApiClient2.default.instance;
  }

  _createClass(ProfileApi, [{
    key: 'v10ProfileAvatarRemovePostWithHttpInfo',
    value: function v10ProfileAvatarRemovePostWithHttpInfo(authorization) {
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfileAvatarRemovePost");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = null;

      return this.apiClient.callApi('/v1.0/profile/avatar/remove', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Remove avatar
     * @function ProfileApi#v10ProfileAvatarRemovePost
     * @param {String} authorization JWT access token
     * @return {Promise<any>} a Promise, with an object containing HTTP response
     */

  }, {
    key: 'v10ProfileAvatarRemovePost',
    value: function v10ProfileAvatarRemovePost(authorization) {
      return this.v10ProfileAvatarRemovePostWithHttpInfo(authorization).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfileAvatarUpdateByFileIdPostWithHttpInfo',
    value: function v10ProfileAvatarUpdateByFileIdPostWithHttpInfo(fileId, authorization) {
      var postBody = null;

      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling v10ProfileAvatarUpdateByFileIdPost");
      }

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfileAvatarUpdateByFileIdPost");
      }

      var pathParams = {
        'fileId': fileId
      };
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = null;

      return this.apiClient.callApi('/v1.0/profile/avatar/update/{fileId}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Update avatar
     * @function ProfileApi#v10ProfileAvatarUpdateByFileIdPost
     * @param {String} fileId 
     * @param {String} authorization JWT access token
     * @return {Promise<any>} a Promise, with an object containing HTTP response
     */

  }, {
    key: 'v10ProfileAvatarUpdateByFileIdPost',
    value: function v10ProfileAvatarUpdateByFileIdPost(fileId, authorization) {
      return this.v10ProfileAvatarUpdateByFileIdPostWithHttpInfo(fileId, authorization).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfileGetWithHttpInfo',
    value: function v10ProfileGetWithHttpInfo(authorization) {
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfileGet");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = _ProfileFullViewModel2.default;

      return this.apiClient.callApi('/v1.0/profile', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Get full profile
     * @function ProfileApi#v10ProfileGet
     * @param {String} authorization JWT access token
     * @return {Promise<ProfileFullViewModel>} a Promise, with an object containing data of type ProfileFullViewModel and HTTP response
     */

  }, {
    key: 'v10ProfileGet',
    value: function v10ProfileGet(authorization) {
      return this.v10ProfileGetWithHttpInfo(authorization).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfileHeaderGetWithHttpInfo',
    value: function v10ProfileHeaderGetWithHttpInfo(authorization) {
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfileHeaderGet");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = _ProfileHeaderViewModel2.default;

      return this.apiClient.callApi('/v1.0/profile/header', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Get header profile
     * @function ProfileApi#v10ProfileHeaderGet
     * @param {String} authorization JWT access token
     * @return {Promise<ProfileHeaderViewModel>} a Promise, with an object containing data of type ProfileHeaderViewModel and HTTP response
     */

  }, {
    key: 'v10ProfileHeaderGet',
    value: function v10ProfileHeaderGet(authorization) {
      return this.v10ProfileHeaderGetWithHttpInfo(authorization).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfilePersonalUpdatePostWithHttpInfo',
    value: function v10ProfilePersonalUpdatePostWithHttpInfo(authorization, opts) {
      opts = opts || {};
      var postBody = opts['model'];

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfilePersonalUpdatePost");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = null;

      return this.apiClient.callApi('/v1.0/profile/personal/update', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Update user personal details
     * @function ProfileApi#v10ProfilePersonalUpdatePost
     * @param {String} authorization JWT access token
     * @param {Object} [opts] Optional parameters
     * @param {UpdatePersonalDetailViewModel} [opts.model] 
     * @return {Promise<any>} a Promise, with an object containing HTTP response
     */

  }, {
    key: 'v10ProfilePersonalUpdatePost',
    value: function v10ProfilePersonalUpdatePost(authorization, opts) {
      return this.v10ProfilePersonalUpdatePostWithHttpInfo(authorization, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfilePushTokenPostWithHttpInfo',
    value: function v10ProfilePushTokenPostWithHttpInfo(authorization, opts) {
      opts = opts || {};
      var postBody = opts['token'];

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfilePushTokenPost");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi('/v1.0/profile/push/token', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * @function ProfileApi#v10ProfilePushTokenPost
     * @param {String} authorization JWT access token
     * @param {Object} [opts] Optional parameters
     * @param {String} [opts.token] 
     * @return {Promise<any>} a Promise, with an object containing HTTP response
     */

  }, {
    key: 'v10ProfilePushTokenPost',
    value: function v10ProfilePushTokenPost(authorization, opts) {
      return this.v10ProfilePushTokenPostWithHttpInfo(authorization, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfileUpdatePostWithHttpInfo',
    value: function v10ProfileUpdatePostWithHttpInfo(authorization, opts) {
      opts = opts || {};
      var postBody = opts['model'];

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfileUpdatePost");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = null;

      return this.apiClient.callApi('/v1.0/profile/update', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Update profile
     * @function ProfileApi#v10ProfileUpdatePost
     * @param {String} authorization JWT access token
     * @param {Object} [opts] Optional parameters
     * @param {UpdateProfileViewModel} [opts.model] 
     * @return {Promise<any>} a Promise, with an object containing HTTP response
     */

  }, {
    key: 'v10ProfileUpdatePost',
    value: function v10ProfileUpdatePost(authorization, opts) {
      return this.v10ProfileUpdatePostWithHttpInfo(authorization, opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }, {
    key: 'v10ProfileVerificationTokenPostWithHttpInfo',
    value: function v10ProfileVerificationTokenPostWithHttpInfo(authorization) {
      var postBody = null;

      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v10ProfileVerificationTokenPost");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Authorization': authorization
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = 'String';

      return this.apiClient.callApi('/v1.0/profile/verification/token', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * @function ProfileApi#v10ProfileVerificationTokenPost
     * @param {String} authorization JWT access token
     * @return {Promise<'String'>} a Promise, with an object containing data of type 'String' and HTTP response
     */

  }, {
    key: 'v10ProfileVerificationTokenPost',
    value: function v10ProfileVerificationTokenPost(authorization) {
      return this.v10ProfileVerificationTokenPostWithHttpInfo(authorization).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);

  return ProfileApi;
}();

exports.default = ProfileApi;