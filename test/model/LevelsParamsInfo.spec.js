/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoreApiV10);
  }
}(this, function(expect, CoreApiV10) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CoreApiV10.LevelsParamsInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LevelsParamsInfo', function() {
    it('should create an instance of LevelsParamsInfo', function() {
      // uncomment below and update the code to test LevelsParamsInfo
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be.a(CoreApiV10.LevelsParamsInfo);
    });

    it('should have the property minAvailableToInvest (base name: "minAvailableToInvest")', function() {
      // uncomment below and update the code to test the property minAvailableToInvest
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property maxAvailableToInvest (base name: "maxAvailableToInvest")', function() {
      // uncomment below and update the code to test the property maxAvailableToInvest
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property unverifiedAvailableToInvest (base name: "unverifiedAvailableToInvest")', function() {
      // uncomment below and update the code to test the property unverifiedAvailableToInvest
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property profitToDeviationMin (base name: "profitToDeviationMin")', function() {
      // uncomment below and update the code to test the property profitToDeviationMin
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property profitToDeviationMax (base name: "profitToDeviationMax")', function() {
      // uncomment below and update the code to test the property profitToDeviationMax
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property volumeScaleMin (base name: "volumeScaleMin")', function() {
      // uncomment below and update the code to test the property volumeScaleMin
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property volumeScaleMax (base name: "volumeScaleMax")', function() {
      // uncomment below and update the code to test the property volumeScaleMax
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property programAgeMax (base name: "programAgeMax")', function() {
      // uncomment below and update the code to test the property programAgeMax
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property ageByVolumeMax (base name: "ageByVolumeMax")', function() {
      // uncomment below and update the code to test the property ageByVolumeMax
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property investmentScaleMin (base name: "investmentScaleMin")', function() {
      // uncomment below and update the code to test the property investmentScaleMin
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property investmentScaleMax (base name: "investmentScaleMax")', function() {
      // uncomment below and update the code to test the property investmentScaleMax
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

    it('should have the property investmentScaleHighRisk (base name: "investmentScaleHighRisk")', function() {
      // uncomment below and update the code to test the property investmentScaleHighRisk
      //var instane = new CoreApiV10.LevelsParamsInfo();
      //expect(instance).to.be();
    });

  });

}));
