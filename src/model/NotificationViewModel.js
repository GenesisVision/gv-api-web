/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





    /**
     *
     * @interface NotificationViewModel
     */
    
    /**
     *
     * @name NotificationViewModel#id
     * @type {String}
     */
    /**
     *
     * @name NotificationViewModel#text
     * @type {String}
     */
    /**
     *
     * @name NotificationViewModel#date
     * @type {Date}
     */
    /**
     *
     * @name NotificationViewModel#type
     * @type {("PlatformNewsAndUpdates"|"PlatformEmergency"|"PlatformOther"|"ProfileUpdated"|"ProfilePwdUpdated"|"ProfileVerification"|"Profile2FA"|"ProfileSecurity"|"ProgramNewsAndUpdates"|"ProgramEndOfPeriod"|"ProgramCondition"|"FundNewsAndUpdates"|"FundEndOfPeriod"|"FundRebalancing"|"ManagerNewProgram")}
     */
    /**
     *
     * @name NotificationViewModel#assetId
     * @type {String}
     */
    /**
     *
     * @name NotificationViewModel#managerId
     * @type {String}
     */
    /**
     *
     * @name NotificationViewModel#logo
     * @type {String}
     */
    /**
     *
     * @name NotificationViewModel#url
     * @type {String}
     */
    /**
     *
     * @name NotificationViewModel#isUnread
     * @type {Boolean}
     */
    /**
     *
     * @name NotificationViewModel#assetType
     * @type {("Program"|"Fund")}
     */





export default class NotificationViewModel {

    constructor() {
        

        
        

        

        
    }

    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationViewModel();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'String');
            }
            if (data.hasOwnProperty('managerId')) {
                obj['managerId'] = ApiClient.convertToType(data['managerId'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('isUnread')) {
                obj['isUnread'] = ApiClient.convertToType(data['isUnread'], 'Boolean');
            }
            if (data.hasOwnProperty('assetType')) {
                obj['assetType'] = ApiClient.convertToType(data['assetType'], 'String');
            }
        }
        return obj;
    }

    id = undefined;
    text = undefined;
    date = undefined;
    type = undefined;
    assetId = undefined;
    managerId = undefined;
    logo = undefined;
    url = undefined;
    isUnread = undefined;
    assetType = undefined;






    static TypeEnum = {
    
        "PlatformNewsAndUpdates": "PlatformNewsAndUpdates",
    
        "PlatformEmergency": "PlatformEmergency",
    
        "PlatformOther": "PlatformOther",
    
        "ProfileUpdated": "ProfileUpdated",
    
        "ProfilePwdUpdated": "ProfilePwdUpdated",
    
        "ProfileVerification": "ProfileVerification",
    
        "Profile2FA": "Profile2FA",
    
        "ProfileSecurity": "ProfileSecurity",
    
        "ProgramNewsAndUpdates": "ProgramNewsAndUpdates",
    
        "ProgramEndOfPeriod": "ProgramEndOfPeriod",
    
        "ProgramCondition": "ProgramCondition",
    
        "FundNewsAndUpdates": "FundNewsAndUpdates",
    
        "FundEndOfPeriod": "FundEndOfPeriod",
    
        "FundRebalancing": "FundRebalancing",
    
        "ManagerNewProgram": "ManagerNewProgram"    
    };

    static AssetTypeEnum = {
    
        "Program": "Program",
    
        "Fund": "Fund"    
    };



}


