/**
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoreApi);
  }
}(this, function(expect, CoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CoreApi.BrokerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BrokerApi', function() {
    describe('apiBrokerAccountCreatePost', function() {
      it('should call apiBrokerAccountCreatePost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerAccountCreatePost
        //instance.apiBrokerAccountCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerAuthChangePasswordPost', function() {
      it('should call apiBrokerAuthChangePasswordPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerAuthChangePasswordPost
        //instance.apiBrokerAuthChangePasswordPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerAuthConfirmEmailPost', function() {
      it('should call apiBrokerAuthConfirmEmailPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerAuthConfirmEmailPost
        //instance.apiBrokerAuthConfirmEmailPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerAuthSignInPost', function() {
      it('should call apiBrokerAuthSignInPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerAuthSignInPost
        //instance.apiBrokerAuthSignInPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerAuthUpdateTokenGet', function() {
      it('should call apiBrokerAuthUpdateTokenGet successfully', function(done) {
        //uncomment below and update the code to test apiBrokerAuthUpdateTokenGet
        //instance.apiBrokerAuthUpdateTokenGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerInitDataGet', function() {
      it('should call apiBrokerInitDataGet successfully', function(done) {
        //uncomment below and update the code to test apiBrokerInitDataGet
        //instance.apiBrokerInitDataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerManagersAccountsOnlineInfoUpdatePost', function() {
      it('should call apiBrokerManagersAccountsOnlineInfoUpdatePost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerManagersAccountsOnlineInfoUpdatePost
        //instance.apiBrokerManagersAccountsOnlineInfoUpdatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodAccrueProfitsPost', function() {
      it('should call apiBrokerPeriodAccrueProfitsPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodAccrueProfitsPost
        //instance.apiBrokerPeriodAccrueProfitsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodClosePost', function() {
      it('should call apiBrokerPeriodClosePost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodClosePost
        //instance.apiBrokerPeriodClosePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodProcessClosingProgramPost', function() {
      it('should call apiBrokerPeriodProcessClosingProgramPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodProcessClosingProgramPost
        //instance.apiBrokerPeriodProcessClosingProgramPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodProcessInvestmentRequestsPost', function() {
      it('should call apiBrokerPeriodProcessInvestmentRequestsPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodProcessInvestmentRequestsPost
        //instance.apiBrokerPeriodProcessInvestmentRequestsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodReevaluateManagerTokenPost', function() {
      it('should call apiBrokerPeriodReevaluateManagerTokenPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodReevaluateManagerTokenPost
        //instance.apiBrokerPeriodReevaluateManagerTokenPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodSetStartValuesPost', function() {
      it('should call apiBrokerPeriodSetStartValuesPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodSetStartValuesPost
        //instance.apiBrokerPeriodSetStartValuesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodTerminatePost', function() {
      it('should call apiBrokerPeriodTerminatePost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodTerminatePost
        //instance.apiBrokerPeriodTerminatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerPeriodlosingDataGet', function() {
      it('should call apiBrokerPeriodlosingDataGet successfully', function(done) {
        //uncomment below and update the code to test apiBrokerPeriodlosingDataGet
        //instance.apiBrokerPeriodlosingDataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerTradesIpfsHashUpdatePost', function() {
      it('should call apiBrokerTradesIpfsHashUpdatePost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerTradesIpfsHashUpdatePost
        //instance.apiBrokerTradesIpfsHashUpdatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerTradesNewPost', function() {
      it('should call apiBrokerTradesNewPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerTradesNewPost
        //instance.apiBrokerTradesNewPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBrokerTradesOpenTradesNewPost', function() {
      it('should call apiBrokerTradesOpenTradesNewPost successfully', function(done) {
        //uncomment below and update the code to test apiBrokerTradesOpenTradesNewPost
        //instance.apiBrokerTradesOpenTradesNewPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
