/**
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoreApi);
  }
}(this, function(expect, CoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CoreApi.InvestmentProgramDashboardManager();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvestmentProgramDashboardManager', function() {
    it('should create an instance of InvestmentProgramDashboardManager', function() {
      // uncomment below and update the code to test InvestmentProgramDashboardManager
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be.a(CoreApi.InvestmentProgramDashboardManager);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property balance (base name: "balance")', function() {
      // uncomment below and update the code to test the property balance
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property tradesCount (base name: "tradesCount")', function() {
      // uncomment below and update the code to test the property tradesCount
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property periodDuration (base name: "periodDuration")', function() {
      // uncomment below and update the code to test the property periodDuration
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property investorsCount (base name: "investorsCount")', function() {
      // uncomment below and update the code to test the property investorsCount
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property isEnabled (base name: "isEnabled")', function() {
      // uncomment below and update the code to test the property isEnabled
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property startOfPeriod (base name: "startOfPeriod")', function() {
      // uncomment below and update the code to test the property startOfPeriod
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property profitTotal (base name: "profitTotal")', function() {
      // uncomment below and update the code to test the property profitTotal
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property profitTotalGvt (base name: "profitTotalGvt")', function() {
      // uncomment below and update the code to test the property profitTotalGvt
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property profitCurrent (base name: "profitCurrent")', function() {
      // uncomment below and update the code to test the property profitCurrent
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property isInvestEnable (base name: "isInvestEnable")', function() {
      // uncomment below and update the code to test the property isInvestEnable
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property isWithdrawEnable (base name: "isWithdrawEnable")', function() {
      // uncomment below and update the code to test the property isWithdrawEnable
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property ownBalance (base name: "ownBalance")', function() {
      // uncomment below and update the code to test the property ownBalance
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property minAccountBalanceUsd (base name: "minAccountBalanceUsd")', function() {
      // uncomment below and update the code to test the property minAccountBalanceUsd
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property minAccountBalance (base name: "minAccountBalance")', function() {
      // uncomment below and update the code to test the property minAccountBalance
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property login (base name: "login")', function() {
      // uncomment below and update the code to test the property login
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property canCloseProgram (base name: "canCloseProgram")', function() {
      // uncomment below and update the code to test the property canCloseProgram
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property canClosePeriod (base name: "canClosePeriod")', function() {
      // uncomment below and update the code to test the property canClosePeriod
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

    it('should have the property isFavorite (base name: "isFavorite")', function() {
      // uncomment below and update the code to test the property isFavorite
      //var instane = new CoreApi.InvestmentProgramDashboardManager();
      //expect(instance).to.be();
    });

  });

}));
