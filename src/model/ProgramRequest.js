/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.ProgramRequest = factory(root.CoreApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ProgramRequest model module.
   * @module model/ProgramRequest
   * @version v1.0
   */

  /**
   * Constructs a new <code>ProgramRequest</code>.
   * @alias module:model/ProgramRequest
   * @class
   */
  var exports = function() {
    var _this = this;


















  };

  /**
   * Constructs a <code>ProgramRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProgramRequest} obj Optional instance to populate.
   * @return {module:model/ProgramRequest} The populated <code>ProgramRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('programId')) {
        obj['programId'] = ApiClient.convertToType(data['programId'], 'String');
      }
      if (data.hasOwnProperty('date')) {
        obj['date'] = ApiClient.convertToType(data['date'], 'Date');
      }
      if (data.hasOwnProperty('value')) {
        obj['value'] = ApiClient.convertToType(data['value'], 'Number');
      }
      if (data.hasOwnProperty('valueGvt')) {
        obj['valueGvt'] = ApiClient.convertToType(data['valueGvt'], 'Number');
      }
      if (data.hasOwnProperty('withdrawAll')) {
        obj['withdrawAll'] = ApiClient.convertToType(data['withdrawAll'], 'Boolean');
      }
      if (data.hasOwnProperty('feeEntry')) {
        obj['feeEntry'] = ApiClient.convertToType(data['feeEntry'], 'Number');
      }
      if (data.hasOwnProperty('feeExit')) {
        obj['feeExit'] = ApiClient.convertToType(data['feeExit'], 'Number');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('fundWithdrawPercent')) {
        obj['fundWithdrawPercent'] = ApiClient.convertToType(data['fundWithdrawPercent'], 'Number');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('logo')) {
        obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('color')) {
        obj['color'] = ApiClient.convertToType(data['color'], 'String');
      }
      if (data.hasOwnProperty('canCancelRequest')) {
        obj['canCancelRequest'] = ApiClient.convertToType(data['canCancelRequest'], 'Boolean');
      }
      if (data.hasOwnProperty('programType')) {
        obj['programType'] = ApiClient.convertToType(data['programType'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} programId
   */
  exports.prototype['programId'] = undefined;
  /**
   * @member {Date} date
   */
  exports.prototype['date'] = undefined;
  /**
   * @member {Number} value
   */
  exports.prototype['value'] = undefined;
  /**
   * @member {Number} valueGvt
   */
  exports.prototype['valueGvt'] = undefined;
  /**
   * @member {Boolean} withdrawAll
   */
  exports.prototype['withdrawAll'] = undefined;
  /**
   * @member {Number} feeEntry
   */
  exports.prototype['feeEntry'] = undefined;
  /**
   * @member {Number} feeExit
   */
  exports.prototype['feeExit'] = undefined;
  /**
   * @member {module:model/ProgramRequest.CurrencyEnum} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * Used only in fund withdraw request
   * @member {Number} fundWithdrawPercent
   */
  exports.prototype['fundWithdrawPercent'] = undefined;
  /**
   * @member {module:model/ProgramRequest.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/ProgramRequest.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {String} logo
   */
  exports.prototype['logo'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {String} color
   */
  exports.prototype['color'] = undefined;
  /**
   * @member {Boolean} canCancelRequest
   */
  exports.prototype['canCancelRequest'] = undefined;
  /**
   * @member {module:model/ProgramRequest.ProgramTypeEnum} programType
   */
  exports.prototype['programType'] = undefined;


  /**
   * Allowed values for the <code>currency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurrencyEnum = {
    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",
    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",
    /**
     * value: "USDT"
     * @const
     */
    "USDT": "USDT",
    /**
     * value: "GVT"
     * @const
     */
    "GVT": "GVT",
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "ADA"
     * @const
     */
    "ADA": "ADA",
    /**
     * value: "XRP"
     * @const
     */
    "XRP": "XRP",
    /**
     * value: "BCH"
     * @const
     */
    "BCH": "BCH",
    /**
     * value: "LTC"
     * @const
     */
    "LTC": "LTC",
    /**
     * value: "DOGE"
     * @const
     */
    "DOGE": "DOGE",
    /**
     * value: "BNB"
     * @const
     */
    "BNB": "BNB",
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "Invest"
     * @const
     */
    "Invest": "Invest",
    /**
     * value: "Withdrawal"
     * @const
     */
    "Withdrawal": "Withdrawal"  };

  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "New"
     * @const
     */
    "New": "New",
    /**
     * value: "Executed"
     * @const
     */
    "Executed": "Executed",
    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled"  };

  /**
   * Allowed values for the <code>programType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProgramTypeEnum = {
    /**
     * value: "Program"
     * @const
     */
    "Program": "Program",
    /**
     * value: "Fund"
     * @const
     */
    "Fund": "Fund"  };


  return exports;
}));


