/**
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AssetType } from './AssetType';
import { PlatformEventType } from './PlatformEventType';

import ApiClient from "../ApiClient";

export class PlatformEvent { 
    public 'title': string;
    public 'text': string;
    public 'icon': string;
    public 'assetUrl': string;
    public 'userUrl': string;
    public 'value': string;
    public 'color': string;
    public 'assetType': AssetType;
    public 'date': Date;
    public 'type': PlatformEventType;

    constructor(data: {[key: string]: any}) { 
        this['title'] = data['title'];
        this['text'] = data['text'];
        this['icon'] = data['icon'];
        this['assetUrl'] = data['assetUrl'];
        this['userUrl'] = data['userUrl'];
        this['value'] = data['value'];
        this['color'] = data['color'];
        this['assetType'] = data['assetType'];
        this['date'] = data['date'];
        this['type'] = data['type'];
    }

    static constructFromObject(data: {[key: string]: any}): PlatformEvent | undefined {
        if (data) {
            return new PlatformEvent({ 
                'title': ApiClient.convertToType(data['title'], 'string'),
                'text': ApiClient.convertToType(data['text'], 'string'),
                'icon': ApiClient.convertToType(data['icon'], 'string'),
                'assetUrl': ApiClient.convertToType(data['assetUrl'], 'string'),
                'userUrl': ApiClient.convertToType(data['userUrl'], 'string'),
                'value': ApiClient.convertToType(data['value'], 'string'),
                'color': ApiClient.convertToType(data['color'], 'string'),
                'assetType': AssetType.constructFromObject(data['assetType']),
                'date': ApiClient.convertToType(data['date'], 'Date'),
                'type': PlatformEventType.constructFromObject(data['type']),
            });
        }
    }
}



