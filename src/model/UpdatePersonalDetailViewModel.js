/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





    /**
     *
     * @interface UpdatePersonalDetailViewModel
     */
    
    /**
     *
     * @name UpdatePersonalDetailViewModel#firstName
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#middleName
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#lastName
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#birthday
     * @type {Date}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#citizenship
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#gender
     * @type {Boolean}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#documentId
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#phoneNumber
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#country
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#city
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#address
     * @type {String}
     */
    /**
     *
     * @name UpdatePersonalDetailViewModel#index
     * @type {String}
     */





export default class UpdatePersonalDetailViewModel {

    constructor() {
        

        
        

        

        
    }

    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePersonalDetailViewModel();

            
            
            

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('middleName')) {
                obj['middleName'] = ApiClient.convertToType(data['middleName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('birthday')) {
                obj['birthday'] = ApiClient.convertToType(data['birthday'], 'Date');
            }
            if (data.hasOwnProperty('citizenship')) {
                obj['citizenship'] = ApiClient.convertToType(data['citizenship'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'Boolean');
            }
            if (data.hasOwnProperty('documentId')) {
                obj['documentId'] = ApiClient.convertToType(data['documentId'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'String');
            }
        }
        return obj;
    }

    firstName = undefined;
    middleName = undefined;
    lastName = undefined;
    birthday = undefined;
    citizenship = undefined;
    gender = undefined;
    documentId = undefined;
    phoneNumber = undefined;
    country = undefined;
    city = undefined;
    address = undefined;
    index = undefined;








}


