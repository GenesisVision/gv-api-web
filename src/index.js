/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AmountWithCurrency', 'model/AndroidAppVersion', 'model/AndroidVersion', 'model/AssetEvent', 'model/AssetSelection', 'model/AssetsValue', 'model/AttachToSignalProvider', 'model/AttachToSignalProviderInfo', 'model/BalanceChartElement', 'model/BlockchainInfo', 'model/Broker', 'model/BrokerAccountType', 'model/BrokersInfo', 'model/CaptchaCheckResult', 'model/CaptchaDetails', 'model/ChangeBrokerProgramRequest', 'model/ChangePasswordViewModel', 'model/ChartSimple', 'model/ConvertingDetails', 'model/CopyTradingAccountInfo', 'model/CopyTradingAccountsList', 'model/CreateWithdrawalRequestModel', 'model/DashboardChartValue', 'model/DashboardPortfolioEvent', 'model/DashboardPortfolioEvents', 'model/DashboardProgramDetails', 'model/DashboardSummary', 'model/DetachFromSignalProvider', 'model/Enums', 'model/ErrorMessage', 'model/ErrorViewModel', 'model/ExternalTransactionDetails', 'model/FcmTokenViewModel', 'model/ForgotPasswordViewModel', 'model/FundAssetInfo', 'model/FundAssetPart', 'model/FundAssetPartWithIcon', 'model/FundAssetPercent', 'model/FundAssetsListInfo', 'model/FundBalanceChart', 'model/FundDetails', 'model/FundDetailsFull', 'model/FundDetailsListStatistic', 'model/FundFacet', 'model/FundFilters', 'model/FundInvestInfo', 'model/FundNotificationSettingList', 'model/FundProfitChart', 'model/FundSets', 'model/FundStatistic', 'model/FundWithdrawInfo', 'model/FundsList', 'model/GeeTestDetails', 'model/GeeTestResult', 'model/IOsAppVersion', 'model/InternalTransferRequest', 'model/LevelInfo', 'model/LevelUpData', 'model/LevelUpSummary', 'model/LevelsParamsInfo', 'model/LoginViewModel', 'model/ManagerAssets', 'model/ManagerDashboard', 'model/ManagerFundWithdrawInfo', 'model/ManagerNotificationSettingList', 'model/ManagerOverview', 'model/ManagerPortfolioEvent', 'model/ManagerPortfolioEvents', 'model/ManagerProfile', 'model/ManagerProfileDetails', 'model/ManagerProgramCreateResult', 'model/ManagerProgramWithdrawInfo', 'model/ManagerSimpleFund', 'model/ManagerSimpleProgram', 'model/ManagersList', 'model/MigrationRequest', 'model/MultiWalletExternalTransaction', 'model/MultiWalletExternalTransactionsViewModel', 'model/MultiWalletFilters', 'model/MultiWalletTransaction', 'model/MultiWalletTransactionsViewModel', 'model/NewFundRequest', 'model/NewProgramRequest', 'model/NotificationList', 'model/NotificationSettingList', 'model/NotificationSettingViewModel', 'model/NotificationViewModel', 'model/OrderModel', 'model/OrderModelSignalData', 'model/OrderProgramData', 'model/OrderSignalFee', 'model/OrderSignalModel', 'model/OrderSignalProgramInfo', 'model/OrderTradingFee', 'model/OtherAssetsValue', 'model/PasswordModel', 'model/PeriodDate', 'model/PersonalFundDetailsFull', 'model/PersonalProgramDetailsFull', 'model/PersonalSignalDetailsFull', 'model/PlatformAsset', 'model/PlatformAssets', 'model/PlatformCurrency', 'model/PlatformInfo', 'model/PlatformStatistic', 'model/PowDetails', 'model/PowResult', 'model/ProfileFullViewModel', 'model/ProfileHeaderViewModel', 'model/ProfilePublic', 'model/ProgramBalanceChart', 'model/ProgramBalanceChartElement', 'model/ProgramDetails', 'model/ProgramDetailsFull', 'model/ProgramDetailsListStatistic', 'model/ProgramDetailsRating', 'model/ProgramFacet', 'model/ProgramFilters', 'model/ProgramInfo', 'model/ProgramInvestInfo', 'model/ProgramLevelInfo', 'model/ProgramMinimumDeposit', 'model/ProgramNotificationSettingList', 'model/ProgramPeriodViewModel', 'model/ProgramPeriodsViewModel', 'model/ProgramProfitChart', 'model/ProgramPwdUpdate', 'model/ProgramRequest', 'model/ProgramRequests', 'model/ProgramSets', 'model/ProgramStatistic', 'model/ProgramTag', 'model/ProgramTransactionDetails', 'model/ProgramUpdate', 'model/ProgramWithdrawInfo', 'model/ProgramsInfo', 'model/ProgramsLevelsInfo', 'model/ProgramsList', 'model/RateItem', 'model/RatesModel', 'model/RatesModelRates', 'model/RecoveryCode', 'model/RecoveryCodesViewModel', 'model/RegisterInvestorViewModel', 'model/RegisterManagerViewModel', 'model/ResendConfirmationViewModel', 'model/ResetPasswordViewModel', 'model/SearchViewModel', 'model/SignalDataMaster', 'model/SignalDetails', 'model/SignalProviderSubscribers', 'model/SignalSubscriber', 'model/SignalSubscription', 'model/SignalsList', 'model/SocialLinkViewModel', 'model/SocialLinksViewModel', 'model/TradesSignalViewModel', 'model/TradesViewModel', 'model/TransactionDetails', 'model/TwoFactorAuthenticator', 'model/TwoFactorAuthenticatorConfirm', 'model/TwoFactorCodeModel', 'model/TwoFactorStatus', 'model/UpdatePersonalDetailViewModel', 'model/UpdateProfileViewModel', 'model/UpdateSocialLinkViewModel', 'model/UploadResult', 'model/UserCommissionData', 'model/ValueChartBar', 'model/WalletBaseData', 'model/WalletData', 'model/WalletInfo', 'model/WalletMultiAvailable', 'model/WalletMultiSummary', 'model/WalletSummary', 'model/WalletTransaction', 'model/WalletTransactionsViewModel', 'model/WalletWithdrawalInfo', 'model/WalletsGrandTotal', 'model/WalletsInfo', 'model/WithdrawalInfo', 'model/WithdrawalSummary', 'api/AuthApi', 'api/BrokersApi', 'api/FileApi', 'api/FundsApi', 'api/InvestorApi', 'api/ManagerApi', 'api/NotificationsApi', 'api/PlatformApi', 'api/ProfileApi', 'api/ProgramsApi', 'api/RateApi', 'api/SearchApi', 'api/SignalApi', 'api/WalletApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AmountWithCurrency'), require('./model/AndroidAppVersion'), require('./model/AndroidVersion'), require('./model/AssetEvent'), require('./model/AssetSelection'), require('./model/AssetsValue'), require('./model/AttachToSignalProvider'), require('./model/AttachToSignalProviderInfo'), require('./model/BalanceChartElement'), require('./model/BlockchainInfo'), require('./model/Broker'), require('./model/BrokerAccountType'), require('./model/BrokersInfo'), require('./model/CaptchaCheckResult'), require('./model/CaptchaDetails'), require('./model/ChangeBrokerProgramRequest'), require('./model/ChangePasswordViewModel'), require('./model/ChartSimple'), require('./model/ConvertingDetails'), require('./model/CopyTradingAccountInfo'), require('./model/CopyTradingAccountsList'), require('./model/CreateWithdrawalRequestModel'), require('./model/DashboardChartValue'), require('./model/DashboardPortfolioEvent'), require('./model/DashboardPortfolioEvents'), require('./model/DashboardProgramDetails'), require('./model/DashboardSummary'), require('./model/DetachFromSignalProvider'), require('./model/Enums'), require('./model/ErrorMessage'), require('./model/ErrorViewModel'), require('./model/ExternalTransactionDetails'), require('./model/FcmTokenViewModel'), require('./model/ForgotPasswordViewModel'), require('./model/FundAssetInfo'), require('./model/FundAssetPart'), require('./model/FundAssetPartWithIcon'), require('./model/FundAssetPercent'), require('./model/FundAssetsListInfo'), require('./model/FundBalanceChart'), require('./model/FundDetails'), require('./model/FundDetailsFull'), require('./model/FundDetailsListStatistic'), require('./model/FundFacet'), require('./model/FundFilters'), require('./model/FundInvestInfo'), require('./model/FundNotificationSettingList'), require('./model/FundProfitChart'), require('./model/FundSets'), require('./model/FundStatistic'), require('./model/FundWithdrawInfo'), require('./model/FundsList'), require('./model/GeeTestDetails'), require('./model/GeeTestResult'), require('./model/IOsAppVersion'), require('./model/InternalTransferRequest'), require('./model/LevelInfo'), require('./model/LevelUpData'), require('./model/LevelUpSummary'), require('./model/LevelsParamsInfo'), require('./model/LoginViewModel'), require('./model/ManagerAssets'), require('./model/ManagerDashboard'), require('./model/ManagerFundWithdrawInfo'), require('./model/ManagerNotificationSettingList'), require('./model/ManagerOverview'), require('./model/ManagerPortfolioEvent'), require('./model/ManagerPortfolioEvents'), require('./model/ManagerProfile'), require('./model/ManagerProfileDetails'), require('./model/ManagerProgramCreateResult'), require('./model/ManagerProgramWithdrawInfo'), require('./model/ManagerSimpleFund'), require('./model/ManagerSimpleProgram'), require('./model/ManagersList'), require('./model/MigrationRequest'), require('./model/MultiWalletExternalTransaction'), require('./model/MultiWalletExternalTransactionsViewModel'), require('./model/MultiWalletFilters'), require('./model/MultiWalletTransaction'), require('./model/MultiWalletTransactionsViewModel'), require('./model/NewFundRequest'), require('./model/NewProgramRequest'), require('./model/NotificationList'), require('./model/NotificationSettingList'), require('./model/NotificationSettingViewModel'), require('./model/NotificationViewModel'), require('./model/OrderModel'), require('./model/OrderModelSignalData'), require('./model/OrderProgramData'), require('./model/OrderSignalFee'), require('./model/OrderSignalModel'), require('./model/OrderSignalProgramInfo'), require('./model/OrderTradingFee'), require('./model/OtherAssetsValue'), require('./model/PasswordModel'), require('./model/PeriodDate'), require('./model/PersonalFundDetailsFull'), require('./model/PersonalProgramDetailsFull'), require('./model/PersonalSignalDetailsFull'), require('./model/PlatformAsset'), require('./model/PlatformAssets'), require('./model/PlatformCurrency'), require('./model/PlatformInfo'), require('./model/PlatformStatistic'), require('./model/PowDetails'), require('./model/PowResult'), require('./model/ProfileFullViewModel'), require('./model/ProfileHeaderViewModel'), require('./model/ProfilePublic'), require('./model/ProgramBalanceChart'), require('./model/ProgramBalanceChartElement'), require('./model/ProgramDetails'), require('./model/ProgramDetailsFull'), require('./model/ProgramDetailsListStatistic'), require('./model/ProgramDetailsRating'), require('./model/ProgramFacet'), require('./model/ProgramFilters'), require('./model/ProgramInfo'), require('./model/ProgramInvestInfo'), require('./model/ProgramLevelInfo'), require('./model/ProgramMinimumDeposit'), require('./model/ProgramNotificationSettingList'), require('./model/ProgramPeriodViewModel'), require('./model/ProgramPeriodsViewModel'), require('./model/ProgramProfitChart'), require('./model/ProgramPwdUpdate'), require('./model/ProgramRequest'), require('./model/ProgramRequests'), require('./model/ProgramSets'), require('./model/ProgramStatistic'), require('./model/ProgramTag'), require('./model/ProgramTransactionDetails'), require('./model/ProgramUpdate'), require('./model/ProgramWithdrawInfo'), require('./model/ProgramsInfo'), require('./model/ProgramsLevelsInfo'), require('./model/ProgramsList'), require('./model/RateItem'), require('./model/RatesModel'), require('./model/RatesModelRates'), require('./model/RecoveryCode'), require('./model/RecoveryCodesViewModel'), require('./model/RegisterInvestorViewModel'), require('./model/RegisterManagerViewModel'), require('./model/ResendConfirmationViewModel'), require('./model/ResetPasswordViewModel'), require('./model/SearchViewModel'), require('./model/SignalDataMaster'), require('./model/SignalDetails'), require('./model/SignalProviderSubscribers'), require('./model/SignalSubscriber'), require('./model/SignalSubscription'), require('./model/SignalsList'), require('./model/SocialLinkViewModel'), require('./model/SocialLinksViewModel'), require('./model/TradesSignalViewModel'), require('./model/TradesViewModel'), require('./model/TransactionDetails'), require('./model/TwoFactorAuthenticator'), require('./model/TwoFactorAuthenticatorConfirm'), require('./model/TwoFactorCodeModel'), require('./model/TwoFactorStatus'), require('./model/UpdatePersonalDetailViewModel'), require('./model/UpdateProfileViewModel'), require('./model/UpdateSocialLinkViewModel'), require('./model/UploadResult'), require('./model/UserCommissionData'), require('./model/ValueChartBar'), require('./model/WalletBaseData'), require('./model/WalletData'), require('./model/WalletInfo'), require('./model/WalletMultiAvailable'), require('./model/WalletMultiSummary'), require('./model/WalletSummary'), require('./model/WalletTransaction'), require('./model/WalletTransactionsViewModel'), require('./model/WalletWithdrawalInfo'), require('./model/WalletsGrandTotal'), require('./model/WalletsInfo'), require('./model/WithdrawalInfo'), require('./model/WithdrawalSummary'), require('./api/AuthApi'), require('./api/BrokersApi'), require('./api/FileApi'), require('./api/FundsApi'), require('./api/InvestorApi'), require('./api/ManagerApi'), require('./api/NotificationsApi'), require('./api/PlatformApi'), require('./api/ProfileApi'), require('./api/ProgramsApi'), require('./api/RateApi'), require('./api/SearchApi'), require('./api/SignalApi'), require('./api/WalletApi'));
  }
}(function(ApiClient, AmountWithCurrency, AndroidAppVersion, AndroidVersion, AssetEvent, AssetSelection, AssetsValue, AttachToSignalProvider, AttachToSignalProviderInfo, BalanceChartElement, BlockchainInfo, Broker, BrokerAccountType, BrokersInfo, CaptchaCheckResult, CaptchaDetails, ChangeBrokerProgramRequest, ChangePasswordViewModel, ChartSimple, ConvertingDetails, CopyTradingAccountInfo, CopyTradingAccountsList, CreateWithdrawalRequestModel, DashboardChartValue, DashboardPortfolioEvent, DashboardPortfolioEvents, DashboardProgramDetails, DashboardSummary, DetachFromSignalProvider, Enums, ErrorMessage, ErrorViewModel, ExternalTransactionDetails, FcmTokenViewModel, ForgotPasswordViewModel, FundAssetInfo, FundAssetPart, FundAssetPartWithIcon, FundAssetPercent, FundAssetsListInfo, FundBalanceChart, FundDetails, FundDetailsFull, FundDetailsListStatistic, FundFacet, FundFilters, FundInvestInfo, FundNotificationSettingList, FundProfitChart, FundSets, FundStatistic, FundWithdrawInfo, FundsList, GeeTestDetails, GeeTestResult, IOsAppVersion, InternalTransferRequest, LevelInfo, LevelUpData, LevelUpSummary, LevelsParamsInfo, LoginViewModel, ManagerAssets, ManagerDashboard, ManagerFundWithdrawInfo, ManagerNotificationSettingList, ManagerOverview, ManagerPortfolioEvent, ManagerPortfolioEvents, ManagerProfile, ManagerProfileDetails, ManagerProgramCreateResult, ManagerProgramWithdrawInfo, ManagerSimpleFund, ManagerSimpleProgram, ManagersList, MigrationRequest, MultiWalletExternalTransaction, MultiWalletExternalTransactionsViewModel, MultiWalletFilters, MultiWalletTransaction, MultiWalletTransactionsViewModel, NewFundRequest, NewProgramRequest, NotificationList, NotificationSettingList, NotificationSettingViewModel, NotificationViewModel, OrderModel, OrderModelSignalData, OrderProgramData, OrderSignalFee, OrderSignalModel, OrderSignalProgramInfo, OrderTradingFee, OtherAssetsValue, PasswordModel, PeriodDate, PersonalFundDetailsFull, PersonalProgramDetailsFull, PersonalSignalDetailsFull, PlatformAsset, PlatformAssets, PlatformCurrency, PlatformInfo, PlatformStatistic, PowDetails, PowResult, ProfileFullViewModel, ProfileHeaderViewModel, ProfilePublic, ProgramBalanceChart, ProgramBalanceChartElement, ProgramDetails, ProgramDetailsFull, ProgramDetailsListStatistic, ProgramDetailsRating, ProgramFacet, ProgramFilters, ProgramInfo, ProgramInvestInfo, ProgramLevelInfo, ProgramMinimumDeposit, ProgramNotificationSettingList, ProgramPeriodViewModel, ProgramPeriodsViewModel, ProgramProfitChart, ProgramPwdUpdate, ProgramRequest, ProgramRequests, ProgramSets, ProgramStatistic, ProgramTag, ProgramTransactionDetails, ProgramUpdate, ProgramWithdrawInfo, ProgramsInfo, ProgramsLevelsInfo, ProgramsList, RateItem, RatesModel, RatesModelRates, RecoveryCode, RecoveryCodesViewModel, RegisterInvestorViewModel, RegisterManagerViewModel, ResendConfirmationViewModel, ResetPasswordViewModel, SearchViewModel, SignalDataMaster, SignalDetails, SignalProviderSubscribers, SignalSubscriber, SignalSubscription, SignalsList, SocialLinkViewModel, SocialLinksViewModel, TradesSignalViewModel, TradesViewModel, TransactionDetails, TwoFactorAuthenticator, TwoFactorAuthenticatorConfirm, TwoFactorCodeModel, TwoFactorStatus, UpdatePersonalDetailViewModel, UpdateProfileViewModel, UpdateSocialLinkViewModel, UploadResult, UserCommissionData, ValueChartBar, WalletBaseData, WalletData, WalletInfo, WalletMultiAvailable, WalletMultiSummary, WalletSummary, WalletTransaction, WalletTransactionsViewModel, WalletWithdrawalInfo, WalletsGrandTotal, WalletsInfo, WithdrawalInfo, WithdrawalSummary, AuthApi, BrokersApi, FileApi, FundsApi, InvestorApi, ManagerApi, NotificationsApi, PlatformApi, ProfileApi, ProgramsApi, RateApi, SearchApi, SignalApi, WalletApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var CoreApiV10 = require('index'); // See note below*.
   * var xxxSvc = new CoreApiV10.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new CoreApiV10.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new CoreApiV10.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new CoreApiV10.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AmountWithCurrency model constructor.
     * @property {module:model/AmountWithCurrency}
     */
    AmountWithCurrency: AmountWithCurrency,
    /**
     * The AndroidAppVersion model constructor.
     * @property {module:model/AndroidAppVersion}
     */
    AndroidAppVersion: AndroidAppVersion,
    /**
     * The AndroidVersion model constructor.
     * @property {module:model/AndroidVersion}
     */
    AndroidVersion: AndroidVersion,
    /**
     * The AssetEvent model constructor.
     * @property {module:model/AssetEvent}
     */
    AssetEvent: AssetEvent,
    /**
     * The AssetSelection model constructor.
     * @property {module:model/AssetSelection}
     */
    AssetSelection: AssetSelection,
    /**
     * The AssetsValue model constructor.
     * @property {module:model/AssetsValue}
     */
    AssetsValue: AssetsValue,
    /**
     * The AttachToSignalProvider model constructor.
     * @property {module:model/AttachToSignalProvider}
     */
    AttachToSignalProvider: AttachToSignalProvider,
    /**
     * The AttachToSignalProviderInfo model constructor.
     * @property {module:model/AttachToSignalProviderInfo}
     */
    AttachToSignalProviderInfo: AttachToSignalProviderInfo,
    /**
     * The BalanceChartElement model constructor.
     * @property {module:model/BalanceChartElement}
     */
    BalanceChartElement: BalanceChartElement,
    /**
     * The BlockchainInfo model constructor.
     * @property {module:model/BlockchainInfo}
     */
    BlockchainInfo: BlockchainInfo,
    /**
     * The Broker model constructor.
     * @property {module:model/Broker}
     */
    Broker: Broker,
    /**
     * The BrokerAccountType model constructor.
     * @property {module:model/BrokerAccountType}
     */
    BrokerAccountType: BrokerAccountType,
    /**
     * The BrokersInfo model constructor.
     * @property {module:model/BrokersInfo}
     */
    BrokersInfo: BrokersInfo,
    /**
     * The CaptchaCheckResult model constructor.
     * @property {module:model/CaptchaCheckResult}
     */
    CaptchaCheckResult: CaptchaCheckResult,
    /**
     * The CaptchaDetails model constructor.
     * @property {module:model/CaptchaDetails}
     */
    CaptchaDetails: CaptchaDetails,
    /**
     * The ChangeBrokerProgramRequest model constructor.
     * @property {module:model/ChangeBrokerProgramRequest}
     */
    ChangeBrokerProgramRequest: ChangeBrokerProgramRequest,
    /**
     * The ChangePasswordViewModel model constructor.
     * @property {module:model/ChangePasswordViewModel}
     */
    ChangePasswordViewModel: ChangePasswordViewModel,
    /**
     * The ChartSimple model constructor.
     * @property {module:model/ChartSimple}
     */
    ChartSimple: ChartSimple,
    /**
     * The ConvertingDetails model constructor.
     * @property {module:model/ConvertingDetails}
     */
    ConvertingDetails: ConvertingDetails,
    /**
     * The CopyTradingAccountInfo model constructor.
     * @property {module:model/CopyTradingAccountInfo}
     */
    CopyTradingAccountInfo: CopyTradingAccountInfo,
    /**
     * The CopyTradingAccountsList model constructor.
     * @property {module:model/CopyTradingAccountsList}
     */
    CopyTradingAccountsList: CopyTradingAccountsList,
    /**
     * The CreateWithdrawalRequestModel model constructor.
     * @property {module:model/CreateWithdrawalRequestModel}
     */
    CreateWithdrawalRequestModel: CreateWithdrawalRequestModel,
    /**
     * The DashboardChartValue model constructor.
     * @property {module:model/DashboardChartValue}
     */
    DashboardChartValue: DashboardChartValue,
    /**
     * The DashboardPortfolioEvent model constructor.
     * @property {module:model/DashboardPortfolioEvent}
     */
    DashboardPortfolioEvent: DashboardPortfolioEvent,
    /**
     * The DashboardPortfolioEvents model constructor.
     * @property {module:model/DashboardPortfolioEvents}
     */
    DashboardPortfolioEvents: DashboardPortfolioEvents,
    /**
     * The DashboardProgramDetails model constructor.
     * @property {module:model/DashboardProgramDetails}
     */
    DashboardProgramDetails: DashboardProgramDetails,
    /**
     * The DashboardSummary model constructor.
     * @property {module:model/DashboardSummary}
     */
    DashboardSummary: DashboardSummary,
    /**
     * The DetachFromSignalProvider model constructor.
     * @property {module:model/DetachFromSignalProvider}
     */
    DetachFromSignalProvider: DetachFromSignalProvider,
    /**
     * The Enums model constructor.
     * @property {module:model/Enums}
     */
    Enums: Enums,
    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage: ErrorMessage,
    /**
     * The ErrorViewModel model constructor.
     * @property {module:model/ErrorViewModel}
     */
    ErrorViewModel: ErrorViewModel,
    /**
     * The ExternalTransactionDetails model constructor.
     * @property {module:model/ExternalTransactionDetails}
     */
    ExternalTransactionDetails: ExternalTransactionDetails,
    /**
     * The FcmTokenViewModel model constructor.
     * @property {module:model/FcmTokenViewModel}
     */
    FcmTokenViewModel: FcmTokenViewModel,
    /**
     * The ForgotPasswordViewModel model constructor.
     * @property {module:model/ForgotPasswordViewModel}
     */
    ForgotPasswordViewModel: ForgotPasswordViewModel,
    /**
     * The FundAssetInfo model constructor.
     * @property {module:model/FundAssetInfo}
     */
    FundAssetInfo: FundAssetInfo,
    /**
     * The FundAssetPart model constructor.
     * @property {module:model/FundAssetPart}
     */
    FundAssetPart: FundAssetPart,
    /**
     * The FundAssetPartWithIcon model constructor.
     * @property {module:model/FundAssetPartWithIcon}
     */
    FundAssetPartWithIcon: FundAssetPartWithIcon,
    /**
     * The FundAssetPercent model constructor.
     * @property {module:model/FundAssetPercent}
     */
    FundAssetPercent: FundAssetPercent,
    /**
     * The FundAssetsListInfo model constructor.
     * @property {module:model/FundAssetsListInfo}
     */
    FundAssetsListInfo: FundAssetsListInfo,
    /**
     * The FundBalanceChart model constructor.
     * @property {module:model/FundBalanceChart}
     */
    FundBalanceChart: FundBalanceChart,
    /**
     * The FundDetails model constructor.
     * @property {module:model/FundDetails}
     */
    FundDetails: FundDetails,
    /**
     * The FundDetailsFull model constructor.
     * @property {module:model/FundDetailsFull}
     */
    FundDetailsFull: FundDetailsFull,
    /**
     * The FundDetailsListStatistic model constructor.
     * @property {module:model/FundDetailsListStatistic}
     */
    FundDetailsListStatistic: FundDetailsListStatistic,
    /**
     * The FundFacet model constructor.
     * @property {module:model/FundFacet}
     */
    FundFacet: FundFacet,
    /**
     * The FundFilters model constructor.
     * @property {module:model/FundFilters}
     */
    FundFilters: FundFilters,
    /**
     * The FundInvestInfo model constructor.
     * @property {module:model/FundInvestInfo}
     */
    FundInvestInfo: FundInvestInfo,
    /**
     * The FundNotificationSettingList model constructor.
     * @property {module:model/FundNotificationSettingList}
     */
    FundNotificationSettingList: FundNotificationSettingList,
    /**
     * The FundProfitChart model constructor.
     * @property {module:model/FundProfitChart}
     */
    FundProfitChart: FundProfitChart,
    /**
     * The FundSets model constructor.
     * @property {module:model/FundSets}
     */
    FundSets: FundSets,
    /**
     * The FundStatistic model constructor.
     * @property {module:model/FundStatistic}
     */
    FundStatistic: FundStatistic,
    /**
     * The FundWithdrawInfo model constructor.
     * @property {module:model/FundWithdrawInfo}
     */
    FundWithdrawInfo: FundWithdrawInfo,
    /**
     * The FundsList model constructor.
     * @property {module:model/FundsList}
     */
    FundsList: FundsList,
    /**
     * The GeeTestDetails model constructor.
     * @property {module:model/GeeTestDetails}
     */
    GeeTestDetails: GeeTestDetails,
    /**
     * The GeeTestResult model constructor.
     * @property {module:model/GeeTestResult}
     */
    GeeTestResult: GeeTestResult,
    /**
     * The IOsAppVersion model constructor.
     * @property {module:model/IOsAppVersion}
     */
    IOsAppVersion: IOsAppVersion,
    /**
     * The InternalTransferRequest model constructor.
     * @property {module:model/InternalTransferRequest}
     */
    InternalTransferRequest: InternalTransferRequest,
    /**
     * The LevelInfo model constructor.
     * @property {module:model/LevelInfo}
     */
    LevelInfo: LevelInfo,
    /**
     * The LevelUpData model constructor.
     * @property {module:model/LevelUpData}
     */
    LevelUpData: LevelUpData,
    /**
     * The LevelUpSummary model constructor.
     * @property {module:model/LevelUpSummary}
     */
    LevelUpSummary: LevelUpSummary,
    /**
     * The LevelsParamsInfo model constructor.
     * @property {module:model/LevelsParamsInfo}
     */
    LevelsParamsInfo: LevelsParamsInfo,
    /**
     * The LoginViewModel model constructor.
     * @property {module:model/LoginViewModel}
     */
    LoginViewModel: LoginViewModel,
    /**
     * The ManagerAssets model constructor.
     * @property {module:model/ManagerAssets}
     */
    ManagerAssets: ManagerAssets,
    /**
     * The ManagerDashboard model constructor.
     * @property {module:model/ManagerDashboard}
     */
    ManagerDashboard: ManagerDashboard,
    /**
     * The ManagerFundWithdrawInfo model constructor.
     * @property {module:model/ManagerFundWithdrawInfo}
     */
    ManagerFundWithdrawInfo: ManagerFundWithdrawInfo,
    /**
     * The ManagerNotificationSettingList model constructor.
     * @property {module:model/ManagerNotificationSettingList}
     */
    ManagerNotificationSettingList: ManagerNotificationSettingList,
    /**
     * The ManagerOverview model constructor.
     * @property {module:model/ManagerOverview}
     */
    ManagerOverview: ManagerOverview,
    /**
     * The ManagerPortfolioEvent model constructor.
     * @property {module:model/ManagerPortfolioEvent}
     */
    ManagerPortfolioEvent: ManagerPortfolioEvent,
    /**
     * The ManagerPortfolioEvents model constructor.
     * @property {module:model/ManagerPortfolioEvents}
     */
    ManagerPortfolioEvents: ManagerPortfolioEvents,
    /**
     * The ManagerProfile model constructor.
     * @property {module:model/ManagerProfile}
     */
    ManagerProfile: ManagerProfile,
    /**
     * The ManagerProfileDetails model constructor.
     * @property {module:model/ManagerProfileDetails}
     */
    ManagerProfileDetails: ManagerProfileDetails,
    /**
     * The ManagerProgramCreateResult model constructor.
     * @property {module:model/ManagerProgramCreateResult}
     */
    ManagerProgramCreateResult: ManagerProgramCreateResult,
    /**
     * The ManagerProgramWithdrawInfo model constructor.
     * @property {module:model/ManagerProgramWithdrawInfo}
     */
    ManagerProgramWithdrawInfo: ManagerProgramWithdrawInfo,
    /**
     * The ManagerSimpleFund model constructor.
     * @property {module:model/ManagerSimpleFund}
     */
    ManagerSimpleFund: ManagerSimpleFund,
    /**
     * The ManagerSimpleProgram model constructor.
     * @property {module:model/ManagerSimpleProgram}
     */
    ManagerSimpleProgram: ManagerSimpleProgram,
    /**
     * The ManagersList model constructor.
     * @property {module:model/ManagersList}
     */
    ManagersList: ManagersList,
    /**
     * The MigrationRequest model constructor.
     * @property {module:model/MigrationRequest}
     */
    MigrationRequest: MigrationRequest,
    /**
     * The MultiWalletExternalTransaction model constructor.
     * @property {module:model/MultiWalletExternalTransaction}
     */
    MultiWalletExternalTransaction: MultiWalletExternalTransaction,
    /**
     * The MultiWalletExternalTransactionsViewModel model constructor.
     * @property {module:model/MultiWalletExternalTransactionsViewModel}
     */
    MultiWalletExternalTransactionsViewModel: MultiWalletExternalTransactionsViewModel,
    /**
     * The MultiWalletFilters model constructor.
     * @property {module:model/MultiWalletFilters}
     */
    MultiWalletFilters: MultiWalletFilters,
    /**
     * The MultiWalletTransaction model constructor.
     * @property {module:model/MultiWalletTransaction}
     */
    MultiWalletTransaction: MultiWalletTransaction,
    /**
     * The MultiWalletTransactionsViewModel model constructor.
     * @property {module:model/MultiWalletTransactionsViewModel}
     */
    MultiWalletTransactionsViewModel: MultiWalletTransactionsViewModel,
    /**
     * The NewFundRequest model constructor.
     * @property {module:model/NewFundRequest}
     */
    NewFundRequest: NewFundRequest,
    /**
     * The NewProgramRequest model constructor.
     * @property {module:model/NewProgramRequest}
     */
    NewProgramRequest: NewProgramRequest,
    /**
     * The NotificationList model constructor.
     * @property {module:model/NotificationList}
     */
    NotificationList: NotificationList,
    /**
     * The NotificationSettingList model constructor.
     * @property {module:model/NotificationSettingList}
     */
    NotificationSettingList: NotificationSettingList,
    /**
     * The NotificationSettingViewModel model constructor.
     * @property {module:model/NotificationSettingViewModel}
     */
    NotificationSettingViewModel: NotificationSettingViewModel,
    /**
     * The NotificationViewModel model constructor.
     * @property {module:model/NotificationViewModel}
     */
    NotificationViewModel: NotificationViewModel,
    /**
     * The OrderModel model constructor.
     * @property {module:model/OrderModel}
     */
    OrderModel: OrderModel,
    /**
     * The OrderModelSignalData model constructor.
     * @property {module:model/OrderModelSignalData}
     */
    OrderModelSignalData: OrderModelSignalData,
    /**
     * The OrderProgramData model constructor.
     * @property {module:model/OrderProgramData}
     */
    OrderProgramData: OrderProgramData,
    /**
     * The OrderSignalFee model constructor.
     * @property {module:model/OrderSignalFee}
     */
    OrderSignalFee: OrderSignalFee,
    /**
     * The OrderSignalModel model constructor.
     * @property {module:model/OrderSignalModel}
     */
    OrderSignalModel: OrderSignalModel,
    /**
     * The OrderSignalProgramInfo model constructor.
     * @property {module:model/OrderSignalProgramInfo}
     */
    OrderSignalProgramInfo: OrderSignalProgramInfo,
    /**
     * The OrderTradingFee model constructor.
     * @property {module:model/OrderTradingFee}
     */
    OrderTradingFee: OrderTradingFee,
    /**
     * The OtherAssetsValue model constructor.
     * @property {module:model/OtherAssetsValue}
     */
    OtherAssetsValue: OtherAssetsValue,
    /**
     * The PasswordModel model constructor.
     * @property {module:model/PasswordModel}
     */
    PasswordModel: PasswordModel,
    /**
     * The PeriodDate model constructor.
     * @property {module:model/PeriodDate}
     */
    PeriodDate: PeriodDate,
    /**
     * The PersonalFundDetailsFull model constructor.
     * @property {module:model/PersonalFundDetailsFull}
     */
    PersonalFundDetailsFull: PersonalFundDetailsFull,
    /**
     * The PersonalProgramDetailsFull model constructor.
     * @property {module:model/PersonalProgramDetailsFull}
     */
    PersonalProgramDetailsFull: PersonalProgramDetailsFull,
    /**
     * The PersonalSignalDetailsFull model constructor.
     * @property {module:model/PersonalSignalDetailsFull}
     */
    PersonalSignalDetailsFull: PersonalSignalDetailsFull,
    /**
     * The PlatformAsset model constructor.
     * @property {module:model/PlatformAsset}
     */
    PlatformAsset: PlatformAsset,
    /**
     * The PlatformAssets model constructor.
     * @property {module:model/PlatformAssets}
     */
    PlatformAssets: PlatformAssets,
    /**
     * The PlatformCurrency model constructor.
     * @property {module:model/PlatformCurrency}
     */
    PlatformCurrency: PlatformCurrency,
    /**
     * The PlatformInfo model constructor.
     * @property {module:model/PlatformInfo}
     */
    PlatformInfo: PlatformInfo,
    /**
     * The PlatformStatistic model constructor.
     * @property {module:model/PlatformStatistic}
     */
    PlatformStatistic: PlatformStatistic,
    /**
     * The PowDetails model constructor.
     * @property {module:model/PowDetails}
     */
    PowDetails: PowDetails,
    /**
     * The PowResult model constructor.
     * @property {module:model/PowResult}
     */
    PowResult: PowResult,
    /**
     * The ProfileFullViewModel model constructor.
     * @property {module:model/ProfileFullViewModel}
     */
    ProfileFullViewModel: ProfileFullViewModel,
    /**
     * The ProfileHeaderViewModel model constructor.
     * @property {module:model/ProfileHeaderViewModel}
     */
    ProfileHeaderViewModel: ProfileHeaderViewModel,
    /**
     * The ProfilePublic model constructor.
     * @property {module:model/ProfilePublic}
     */
    ProfilePublic: ProfilePublic,
    /**
     * The ProgramBalanceChart model constructor.
     * @property {module:model/ProgramBalanceChart}
     */
    ProgramBalanceChart: ProgramBalanceChart,
    /**
     * The ProgramBalanceChartElement model constructor.
     * @property {module:model/ProgramBalanceChartElement}
     */
    ProgramBalanceChartElement: ProgramBalanceChartElement,
    /**
     * The ProgramDetails model constructor.
     * @property {module:model/ProgramDetails}
     */
    ProgramDetails: ProgramDetails,
    /**
     * The ProgramDetailsFull model constructor.
     * @property {module:model/ProgramDetailsFull}
     */
    ProgramDetailsFull: ProgramDetailsFull,
    /**
     * The ProgramDetailsListStatistic model constructor.
     * @property {module:model/ProgramDetailsListStatistic}
     */
    ProgramDetailsListStatistic: ProgramDetailsListStatistic,
    /**
     * The ProgramDetailsRating model constructor.
     * @property {module:model/ProgramDetailsRating}
     */
    ProgramDetailsRating: ProgramDetailsRating,
    /**
     * The ProgramFacet model constructor.
     * @property {module:model/ProgramFacet}
     */
    ProgramFacet: ProgramFacet,
    /**
     * The ProgramFilters model constructor.
     * @property {module:model/ProgramFilters}
     */
    ProgramFilters: ProgramFilters,
    /**
     * The ProgramInfo model constructor.
     * @property {module:model/ProgramInfo}
     */
    ProgramInfo: ProgramInfo,
    /**
     * The ProgramInvestInfo model constructor.
     * @property {module:model/ProgramInvestInfo}
     */
    ProgramInvestInfo: ProgramInvestInfo,
    /**
     * The ProgramLevelInfo model constructor.
     * @property {module:model/ProgramLevelInfo}
     */
    ProgramLevelInfo: ProgramLevelInfo,
    /**
     * The ProgramMinimumDeposit model constructor.
     * @property {module:model/ProgramMinimumDeposit}
     */
    ProgramMinimumDeposit: ProgramMinimumDeposit,
    /**
     * The ProgramNotificationSettingList model constructor.
     * @property {module:model/ProgramNotificationSettingList}
     */
    ProgramNotificationSettingList: ProgramNotificationSettingList,
    /**
     * The ProgramPeriodViewModel model constructor.
     * @property {module:model/ProgramPeriodViewModel}
     */
    ProgramPeriodViewModel: ProgramPeriodViewModel,
    /**
     * The ProgramPeriodsViewModel model constructor.
     * @property {module:model/ProgramPeriodsViewModel}
     */
    ProgramPeriodsViewModel: ProgramPeriodsViewModel,
    /**
     * The ProgramProfitChart model constructor.
     * @property {module:model/ProgramProfitChart}
     */
    ProgramProfitChart: ProgramProfitChart,
    /**
     * The ProgramPwdUpdate model constructor.
     * @property {module:model/ProgramPwdUpdate}
     */
    ProgramPwdUpdate: ProgramPwdUpdate,
    /**
     * The ProgramRequest model constructor.
     * @property {module:model/ProgramRequest}
     */
    ProgramRequest: ProgramRequest,
    /**
     * The ProgramRequests model constructor.
     * @property {module:model/ProgramRequests}
     */
    ProgramRequests: ProgramRequests,
    /**
     * The ProgramSets model constructor.
     * @property {module:model/ProgramSets}
     */
    ProgramSets: ProgramSets,
    /**
     * The ProgramStatistic model constructor.
     * @property {module:model/ProgramStatistic}
     */
    ProgramStatistic: ProgramStatistic,
    /**
     * The ProgramTag model constructor.
     * @property {module:model/ProgramTag}
     */
    ProgramTag: ProgramTag,
    /**
     * The ProgramTransactionDetails model constructor.
     * @property {module:model/ProgramTransactionDetails}
     */
    ProgramTransactionDetails: ProgramTransactionDetails,
    /**
     * The ProgramUpdate model constructor.
     * @property {module:model/ProgramUpdate}
     */
    ProgramUpdate: ProgramUpdate,
    /**
     * The ProgramWithdrawInfo model constructor.
     * @property {module:model/ProgramWithdrawInfo}
     */
    ProgramWithdrawInfo: ProgramWithdrawInfo,
    /**
     * The ProgramsInfo model constructor.
     * @property {module:model/ProgramsInfo}
     */
    ProgramsInfo: ProgramsInfo,
    /**
     * The ProgramsLevelsInfo model constructor.
     * @property {module:model/ProgramsLevelsInfo}
     */
    ProgramsLevelsInfo: ProgramsLevelsInfo,
    /**
     * The ProgramsList model constructor.
     * @property {module:model/ProgramsList}
     */
    ProgramsList: ProgramsList,
    /**
     * The RateItem model constructor.
     * @property {module:model/RateItem}
     */
    RateItem: RateItem,
    /**
     * The RatesModel model constructor.
     * @property {module:model/RatesModel}
     */
    RatesModel: RatesModel,
    /**
     * The RatesModelRates model constructor.
     * @property {module:model/RatesModelRates}
     */
    RatesModelRates: RatesModelRates,
    /**
     * The RecoveryCode model constructor.
     * @property {module:model/RecoveryCode}
     */
    RecoveryCode: RecoveryCode,
    /**
     * The RecoveryCodesViewModel model constructor.
     * @property {module:model/RecoveryCodesViewModel}
     */
    RecoveryCodesViewModel: RecoveryCodesViewModel,
    /**
     * The RegisterInvestorViewModel model constructor.
     * @property {module:model/RegisterInvestorViewModel}
     */
    RegisterInvestorViewModel: RegisterInvestorViewModel,
    /**
     * The RegisterManagerViewModel model constructor.
     * @property {module:model/RegisterManagerViewModel}
     */
    RegisterManagerViewModel: RegisterManagerViewModel,
    /**
     * The ResendConfirmationViewModel model constructor.
     * @property {module:model/ResendConfirmationViewModel}
     */
    ResendConfirmationViewModel: ResendConfirmationViewModel,
    /**
     * The ResetPasswordViewModel model constructor.
     * @property {module:model/ResetPasswordViewModel}
     */
    ResetPasswordViewModel: ResetPasswordViewModel,
    /**
     * The SearchViewModel model constructor.
     * @property {module:model/SearchViewModel}
     */
    SearchViewModel: SearchViewModel,
    /**
     * The SignalDataMaster model constructor.
     * @property {module:model/SignalDataMaster}
     */
    SignalDataMaster: SignalDataMaster,
    /**
     * The SignalDetails model constructor.
     * @property {module:model/SignalDetails}
     */
    SignalDetails: SignalDetails,
    /**
     * The SignalProviderSubscribers model constructor.
     * @property {module:model/SignalProviderSubscribers}
     */
    SignalProviderSubscribers: SignalProviderSubscribers,
    /**
     * The SignalSubscriber model constructor.
     * @property {module:model/SignalSubscriber}
     */
    SignalSubscriber: SignalSubscriber,
    /**
     * The SignalSubscription model constructor.
     * @property {module:model/SignalSubscription}
     */
    SignalSubscription: SignalSubscription,
    /**
     * The SignalsList model constructor.
     * @property {module:model/SignalsList}
     */
    SignalsList: SignalsList,
    /**
     * The SocialLinkViewModel model constructor.
     * @property {module:model/SocialLinkViewModel}
     */
    SocialLinkViewModel: SocialLinkViewModel,
    /**
     * The SocialLinksViewModel model constructor.
     * @property {module:model/SocialLinksViewModel}
     */
    SocialLinksViewModel: SocialLinksViewModel,
    /**
     * The TradesSignalViewModel model constructor.
     * @property {module:model/TradesSignalViewModel}
     */
    TradesSignalViewModel: TradesSignalViewModel,
    /**
     * The TradesViewModel model constructor.
     * @property {module:model/TradesViewModel}
     */
    TradesViewModel: TradesViewModel,
    /**
     * The TransactionDetails model constructor.
     * @property {module:model/TransactionDetails}
     */
    TransactionDetails: TransactionDetails,
    /**
     * The TwoFactorAuthenticator model constructor.
     * @property {module:model/TwoFactorAuthenticator}
     */
    TwoFactorAuthenticator: TwoFactorAuthenticator,
    /**
     * The TwoFactorAuthenticatorConfirm model constructor.
     * @property {module:model/TwoFactorAuthenticatorConfirm}
     */
    TwoFactorAuthenticatorConfirm: TwoFactorAuthenticatorConfirm,
    /**
     * The TwoFactorCodeModel model constructor.
     * @property {module:model/TwoFactorCodeModel}
     */
    TwoFactorCodeModel: TwoFactorCodeModel,
    /**
     * The TwoFactorStatus model constructor.
     * @property {module:model/TwoFactorStatus}
     */
    TwoFactorStatus: TwoFactorStatus,
    /**
     * The UpdatePersonalDetailViewModel model constructor.
     * @property {module:model/UpdatePersonalDetailViewModel}
     */
    UpdatePersonalDetailViewModel: UpdatePersonalDetailViewModel,
    /**
     * The UpdateProfileViewModel model constructor.
     * @property {module:model/UpdateProfileViewModel}
     */
    UpdateProfileViewModel: UpdateProfileViewModel,
    /**
     * The UpdateSocialLinkViewModel model constructor.
     * @property {module:model/UpdateSocialLinkViewModel}
     */
    UpdateSocialLinkViewModel: UpdateSocialLinkViewModel,
    /**
     * The UploadResult model constructor.
     * @property {module:model/UploadResult}
     */
    UploadResult: UploadResult,
    /**
     * The UserCommissionData model constructor.
     * @property {module:model/UserCommissionData}
     */
    UserCommissionData: UserCommissionData,
    /**
     * The ValueChartBar model constructor.
     * @property {module:model/ValueChartBar}
     */
    ValueChartBar: ValueChartBar,
    /**
     * The WalletBaseData model constructor.
     * @property {module:model/WalletBaseData}
     */
    WalletBaseData: WalletBaseData,
    /**
     * The WalletData model constructor.
     * @property {module:model/WalletData}
     */
    WalletData: WalletData,
    /**
     * The WalletInfo model constructor.
     * @property {module:model/WalletInfo}
     */
    WalletInfo: WalletInfo,
    /**
     * The WalletMultiAvailable model constructor.
     * @property {module:model/WalletMultiAvailable}
     */
    WalletMultiAvailable: WalletMultiAvailable,
    /**
     * The WalletMultiSummary model constructor.
     * @property {module:model/WalletMultiSummary}
     */
    WalletMultiSummary: WalletMultiSummary,
    /**
     * The WalletSummary model constructor.
     * @property {module:model/WalletSummary}
     */
    WalletSummary: WalletSummary,
    /**
     * The WalletTransaction model constructor.
     * @property {module:model/WalletTransaction}
     */
    WalletTransaction: WalletTransaction,
    /**
     * The WalletTransactionsViewModel model constructor.
     * @property {module:model/WalletTransactionsViewModel}
     */
    WalletTransactionsViewModel: WalletTransactionsViewModel,
    /**
     * The WalletWithdrawalInfo model constructor.
     * @property {module:model/WalletWithdrawalInfo}
     */
    WalletWithdrawalInfo: WalletWithdrawalInfo,
    /**
     * The WalletsGrandTotal model constructor.
     * @property {module:model/WalletsGrandTotal}
     */
    WalletsGrandTotal: WalletsGrandTotal,
    /**
     * The WalletsInfo model constructor.
     * @property {module:model/WalletsInfo}
     */
    WalletsInfo: WalletsInfo,
    /**
     * The WithdrawalInfo model constructor.
     * @property {module:model/WithdrawalInfo}
     */
    WithdrawalInfo: WithdrawalInfo,
    /**
     * The WithdrawalSummary model constructor.
     * @property {module:model/WithdrawalSummary}
     */
    WithdrawalSummary: WithdrawalSummary,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The BrokersApi service constructor.
     * @property {module:api/BrokersApi}
     */
    BrokersApi: BrokersApi,
    /**
     * The FileApi service constructor.
     * @property {module:api/FileApi}
     */
    FileApi: FileApi,
    /**
     * The FundsApi service constructor.
     * @property {module:api/FundsApi}
     */
    FundsApi: FundsApi,
    /**
     * The InvestorApi service constructor.
     * @property {module:api/InvestorApi}
     */
    InvestorApi: InvestorApi,
    /**
     * The ManagerApi service constructor.
     * @property {module:api/ManagerApi}
     */
    ManagerApi: ManagerApi,
    /**
     * The NotificationsApi service constructor.
     * @property {module:api/NotificationsApi}
     */
    NotificationsApi: NotificationsApi,
    /**
     * The PlatformApi service constructor.
     * @property {module:api/PlatformApi}
     */
    PlatformApi: PlatformApi,
    /**
     * The ProfileApi service constructor.
     * @property {module:api/ProfileApi}
     */
    ProfileApi: ProfileApi,
    /**
     * The ProgramsApi service constructor.
     * @property {module:api/ProgramsApi}
     */
    ProgramsApi: ProgramsApi,
    /**
     * The RateApi service constructor.
     * @property {module:api/RateApi}
     */
    RateApi: RateApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The SignalApi service constructor.
     * @property {module:api/SignalApi}
     */
    SignalApi: SignalApi,
    /**
     * The WalletApi service constructor.
     * @property {module:api/WalletApi}
     */
    WalletApi: WalletApi
  };

  return exports;
}));
