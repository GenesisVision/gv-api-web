/**
 * Core API v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ProgramsFilter model module.
* @module model/ProgramsFilter
* @version v2.0
*/
export default class ProgramsFilter {
    /**
    * Constructs a new <code>ProgramsFilter</code>.
    * @alias module:model/ProgramsFilter
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>ProgramsFilter</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ProgramsFilter} obj Optional instance to populate.
    * @return {module:model/ProgramsFilter} The populated <code>ProgramsFilter</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProgramsFilter();

            
            
            

            if (data.hasOwnProperty('levelMin')) {
                obj['levelMin'] = ApiClient.convertToType(data['levelMin'], 'Number');
            }
            if (data.hasOwnProperty('levelMax')) {
                obj['levelMax'] = ApiClient.convertToType(data['levelMax'], 'Number');
            }
            if (data.hasOwnProperty('timeFrame')) {
                obj['timeFrame'] = ApiClient.convertToType(data['timeFrame'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('skip')) {
                obj['skip'] = ApiClient.convertToType(data['skip'], 'Number');
            }
            if (data.hasOwnProperty('take')) {
                obj['take'] = ApiClient.convertToType(data['take'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {Number} levelMin
    */
    levelMin = undefined;
    /**
    * @member {Number} levelMax
    */
    levelMax = undefined;
    /**
    * @member {module:model/ProgramsFilter.TimeFrameEnum} timeFrame
    */
    timeFrame = undefined;
    /**
    * @member {module:model/ProgramsFilter.CurrencyEnum} currency
    */
    currency = undefined;
    /**
    * @member {Number} skip
    */
    skip = undefined;
    /**
    * @member {Number} take
    */
    take = undefined;






    /**
    * Allowed values for the <code>timeFrame</code> property.
    * @enum {String}
    * @readonly
    */
    static TimeFrameEnum = {
    
        /**
         * value: "Day"
         * @const
         */
        "Day": "Day",
    
        /**
         * value: "Week"
         * @const
         */
        "Week": "Week",
    
        /**
         * value: "Month1"
         * @const
         */
        "Month1": "Month1",
    
        /**
         * value: "Month3"
         * @const
         */
        "Month3": "Month3",
    
        /**
         * value: "Month6"
         * @const
         */
        "Month6": "Month6",
    
        /**
         * value: "Year"
         * @const
         */
        "Year": "Year",
    
        /**
         * value: "All"
         * @const
         */
        "All": "All"    
    };

    /**
    * Allowed values for the <code>currency</code> property.
    * @enum {String}
    * @readonly
    */
    static CurrencyEnum = {
    
        /**
         * value: "Undefined"
         * @const
         */
        "Undefined": "Undefined",
    
        /**
         * value: "GVT"
         * @const
         */
        "GVT": "GVT",
    
        /**
         * value: "ETH"
         * @const
         */
        "ETH": "ETH",
    
        /**
         * value: "BTC"
         * @const
         */
        "BTC": "BTC",
    
        /**
         * value: "ADA"
         * @const
         */
        "ADA": "ADA",
    
        /**
         * value: "USD"
         * @const
         */
        "USD": "USD",
    
        /**
         * value: "EUR"
         * @const
         */
        "EUR": "EUR"    
    };



}


