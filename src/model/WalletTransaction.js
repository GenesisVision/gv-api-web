/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BlockchainInfo', 'model/ProgramInfo', 'model/WithdrawalInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BlockchainInfo'), require('./ProgramInfo'), require('./WithdrawalInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.WalletTransaction = factory(root.CoreApiV10.ApiClient, root.CoreApiV10.BlockchainInfo, root.CoreApiV10.ProgramInfo, root.CoreApiV10.WithdrawalInfo);
  }
}(this, function(ApiClient, BlockchainInfo, ProgramInfo, WithdrawalInfo) {
  'use strict';




  /**
   * The WalletTransaction model module.
   * @module model/WalletTransaction
   * @version v1.0
   */

  /**
   * Constructs a new <code>WalletTransaction</code>.
   * @alias module:model/WalletTransaction
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>WalletTransaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WalletTransaction} obj Optional instance to populate.
   * @return {module:model/WalletTransaction} The populated <code>WalletTransaction</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('amountConverted')) {
        obj['amountConverted'] = ApiClient.convertToType(data['amountConverted'], 'Number');
      }
      if (data.hasOwnProperty('date')) {
        obj['date'] = ApiClient.convertToType(data['date'], 'Date');
      }
      if (data.hasOwnProperty('number')) {
        obj['number'] = ApiClient.convertToType(data['number'], 'Number');
      }
      if (data.hasOwnProperty('sourceId')) {
        obj['sourceId'] = ApiClient.convertToType(data['sourceId'], 'String');
      }
      if (data.hasOwnProperty('sourceType')) {
        obj['sourceType'] = ApiClient.convertToType(data['sourceType'], 'String');
      }
      if (data.hasOwnProperty('sourceCurrency')) {
        obj['sourceCurrency'] = ApiClient.convertToType(data['sourceCurrency'], 'String');
      }
      if (data.hasOwnProperty('sourceProgramInfo')) {
        obj['sourceProgramInfo'] = ProgramInfo.constructFromObject(data['sourceProgramInfo']);
      }
      if (data.hasOwnProperty('sourceBlockchainInfo')) {
        obj['sourceBlockchainInfo'] = BlockchainInfo.constructFromObject(data['sourceBlockchainInfo']);
      }
      if (data.hasOwnProperty('sourceWithdrawalInfo')) {
        obj['sourceWithdrawalInfo'] = WithdrawalInfo.constructFromObject(data['sourceWithdrawalInfo']);
      }
      if (data.hasOwnProperty('action')) {
        obj['action'] = ApiClient.convertToType(data['action'], 'String');
      }
      if (data.hasOwnProperty('information')) {
        obj['information'] = ApiClient.convertToType(data['information'], 'String');
      }
      if (data.hasOwnProperty('destinationId')) {
        obj['destinationId'] = ApiClient.convertToType(data['destinationId'], 'String');
      }
      if (data.hasOwnProperty('destinationType')) {
        obj['destinationType'] = ApiClient.convertToType(data['destinationType'], 'String');
      }
      if (data.hasOwnProperty('destinationCurrency')) {
        obj['destinationCurrency'] = ApiClient.convertToType(data['destinationCurrency'], 'String');
      }
      if (data.hasOwnProperty('destinationProgramInfo')) {
        obj['destinationProgramInfo'] = ProgramInfo.constructFromObject(data['destinationProgramInfo']);
      }
      if (data.hasOwnProperty('destinationBlockchainInfo')) {
        obj['destinationBlockchainInfo'] = BlockchainInfo.constructFromObject(data['destinationBlockchainInfo']);
      }
      if (data.hasOwnProperty('destinationWithdrawalInfo')) {
        obj['destinationWithdrawalInfo'] = WithdrawalInfo.constructFromObject(data['destinationWithdrawalInfo']);
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * @member {Number} amountConverted
   */
  exports.prototype['amountConverted'] = undefined;
  /**
   * @member {Date} date
   */
  exports.prototype['date'] = undefined;
  /**
   * @member {Number} number
   */
  exports.prototype['number'] = undefined;
  /**
   * @member {String} sourceId
   */
  exports.prototype['sourceId'] = undefined;
  /**
   * @member {module:model/WalletTransaction.SourceTypeEnum} sourceType
   */
  exports.prototype['sourceType'] = undefined;
  /**
   * @member {module:model/WalletTransaction.SourceCurrencyEnum} sourceCurrency
   */
  exports.prototype['sourceCurrency'] = undefined;
  /**
   * @member {module:model/ProgramInfo} sourceProgramInfo
   */
  exports.prototype['sourceProgramInfo'] = undefined;
  /**
   * @member {module:model/BlockchainInfo} sourceBlockchainInfo
   */
  exports.prototype['sourceBlockchainInfo'] = undefined;
  /**
   * @member {module:model/WithdrawalInfo} sourceWithdrawalInfo
   */
  exports.prototype['sourceWithdrawalInfo'] = undefined;
  /**
   * @member {module:model/WalletTransaction.ActionEnum} action
   */
  exports.prototype['action'] = undefined;
  /**
   * @member {String} information
   */
  exports.prototype['information'] = undefined;
  /**
   * @member {String} destinationId
   */
  exports.prototype['destinationId'] = undefined;
  /**
   * @member {module:model/WalletTransaction.DestinationTypeEnum} destinationType
   */
  exports.prototype['destinationType'] = undefined;
  /**
   * @member {module:model/WalletTransaction.DestinationCurrencyEnum} destinationCurrency
   */
  exports.prototype['destinationCurrency'] = undefined;
  /**
   * @member {module:model/ProgramInfo} destinationProgramInfo
   */
  exports.prototype['destinationProgramInfo'] = undefined;
  /**
   * @member {module:model/BlockchainInfo} destinationBlockchainInfo
   */
  exports.prototype['destinationBlockchainInfo'] = undefined;
  /**
   * @member {module:model/WithdrawalInfo} destinationWithdrawalInfo
   */
  exports.prototype['destinationWithdrawalInfo'] = undefined;


  /**
   * Allowed values for the <code>sourceType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SourceTypeEnum = {
    /**
     * value: "Wallet"
     * @const
     */
    "Wallet": "Wallet",
    /**
     * value: "Program"
     * @const
     */
    "Program": "Program",
    /**
     * value: "Fund"
     * @const
     */
    "Fund": "Fund",
    /**
     * value: "ProgramRequest"
     * @const
     */
    "ProgramRequest": "ProgramRequest",
    /**
     * value: "FundRequest"
     * @const
     */
    "FundRequest": "FundRequest",
    /**
     * value: "WithdrawalRequest"
     * @const
     */
    "WithdrawalRequest": "WithdrawalRequest",
    /**
     * value: "PaymentTransaction"
     * @const
     */
    "PaymentTransaction": "PaymentTransaction",
    /**
     * value: "Blockchain"
     * @const
     */
    "Blockchain": "Blockchain",
    /**
     * value: "GenesisVisionPlatform"
     * @const
     */
    "GenesisVisionPlatform": "GenesisVisionPlatform",
    /**
     * value: "SignalMasterSetting"
     * @const
     */
    "SignalMasterSetting": "SignalMasterSetting",
    /**
     * value: "SignalTradingAccount"
     * @const
     */
    "SignalTradingAccount": "SignalTradingAccount"  };

  /**
   * Allowed values for the <code>sourceCurrency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SourceCurrencyEnum = {
    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",
    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",
    /**
     * value: "USDT"
     * @const
     */
    "USDT": "USDT",
    /**
     * value: "GVT"
     * @const
     */
    "GVT": "GVT",
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "ADA"
     * @const
     */
    "ADA": "ADA",
    /**
     * value: "XRP"
     * @const
     */
    "XRP": "XRP",
    /**
     * value: "BCH"
     * @const
     */
    "BCH": "BCH",
    /**
     * value: "LTC"
     * @const
     */
    "LTC": "LTC",
    /**
     * value: "DOGE"
     * @const
     */
    "DOGE": "DOGE",
    /**
     * value: "BNB"
     * @const
     */
    "BNB": "BNB",
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR"  };

  /**
   * Allowed values for the <code>action</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionEnum = {
    /**
     * value: "Transfer"
     * @const
     */
    "Transfer": "Transfer",
    /**
     * value: "ProgramOpen"
     * @const
     */
    "ProgramOpen": "ProgramOpen",
    /**
     * value: "ProgramProfit"
     * @const
     */
    "ProgramProfit": "ProgramProfit",
    /**
     * value: "ProgramInvest"
     * @const
     */
    "ProgramInvest": "ProgramInvest",
    /**
     * value: "ProgramWithdrawal"
     * @const
     */
    "ProgramWithdrawal": "ProgramWithdrawal",
    /**
     * value: "ProgramRefundPartialExecution"
     * @const
     */
    "ProgramRefundPartialExecution": "ProgramRefundPartialExecution",
    /**
     * value: "ProgramRefundClose"
     * @const
     */
    "ProgramRefundClose": "ProgramRefundClose",
    /**
     * value: "ProgramRefundStopOut"
     * @const
     */
    "ProgramRefundStopOut": "ProgramRefundStopOut",
    /**
     * value: "ProgramRequestInvest"
     * @const
     */
    "ProgramRequestInvest": "ProgramRequestInvest",
    /**
     * value: "ProgramRequestWithdrawal"
     * @const
     */
    "ProgramRequestWithdrawal": "ProgramRequestWithdrawal",
    /**
     * value: "ProgramRequestCancel"
     * @const
     */
    "ProgramRequestCancel": "ProgramRequestCancel",
    /**
     * value: "PayingTradingFee"
     * @const
     */
    "PayingTradingFee": "PayingTradingFee",
    /**
     * value: "SignalSubscriberPayingFee"
     * @const
     */
    "SignalSubscriberPayingFee": "SignalSubscriberPayingFee",
    /**
     * value: "SignalProviderReceiveFee"
     * @const
     */
    "SignalProviderReceiveFee": "SignalProviderReceiveFee"  };

  /**
   * Allowed values for the <code>destinationType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DestinationTypeEnum = {
    /**
     * value: "Wallet"
     * @const
     */
    "Wallet": "Wallet",
    /**
     * value: "Program"
     * @const
     */
    "Program": "Program",
    /**
     * value: "Fund"
     * @const
     */
    "Fund": "Fund",
    /**
     * value: "ProgramRequest"
     * @const
     */
    "ProgramRequest": "ProgramRequest",
    /**
     * value: "FundRequest"
     * @const
     */
    "FundRequest": "FundRequest",
    /**
     * value: "WithdrawalRequest"
     * @const
     */
    "WithdrawalRequest": "WithdrawalRequest",
    /**
     * value: "PaymentTransaction"
     * @const
     */
    "PaymentTransaction": "PaymentTransaction",
    /**
     * value: "Blockchain"
     * @const
     */
    "Blockchain": "Blockchain",
    /**
     * value: "GenesisVisionPlatform"
     * @const
     */
    "GenesisVisionPlatform": "GenesisVisionPlatform",
    /**
     * value: "SignalMasterSetting"
     * @const
     */
    "SignalMasterSetting": "SignalMasterSetting",
    /**
     * value: "SignalTradingAccount"
     * @const
     */
    "SignalTradingAccount": "SignalTradingAccount"  };

  /**
   * Allowed values for the <code>destinationCurrency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DestinationCurrencyEnum = {
    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",
    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",
    /**
     * value: "USDT"
     * @const
     */
    "USDT": "USDT",
    /**
     * value: "GVT"
     * @const
     */
    "GVT": "GVT",
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "ADA"
     * @const
     */
    "ADA": "ADA",
    /**
     * value: "XRP"
     * @const
     */
    "XRP": "XRP",
    /**
     * value: "BCH"
     * @const
     */
    "BCH": "BCH",
    /**
     * value: "LTC"
     * @const
     */
    "LTC": "LTC",
    /**
     * value: "DOGE"
     * @const
     */
    "DOGE": "DOGE",
    /**
     * value: "BNB"
     * @const
     */
    "BNB": "BNB",
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR"  };


  return exports;
}));


