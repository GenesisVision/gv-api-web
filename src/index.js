/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AmountWithCurrency from './model/AmountWithCurrency';
import AndroidAppVersion from './model/AndroidAppVersion';
import AndroidVersion from './model/AndroidVersion';
import AssetsValue from './model/AssetsValue';
import ChangePasswordViewModel from './model/ChangePasswordViewModel';
import ChartProgramDetails from './model/ChartProgramDetails';
import ChartSimple from './model/ChartSimple';
import DExchangeRequest from './model/DExchangeRequest';
import DExchangeResponse from './model/DExchangeResponse';
import DashboardChartValue from './model/DashboardChartValue';
import DashboardPortfolioEvent from './model/DashboardPortfolioEvent';
import DashboardPortfolioEvents from './model/DashboardPortfolioEvents';
import DashboardProgramDetails from './model/DashboardProgramDetails';
import DashboardProgramsList from './model/DashboardProgramsList';
import ErrorMessage from './model/ErrorMessage';
import ErrorViewModel from './model/ErrorViewModel';
import Facet from './model/Facet';
import ForgotPasswordViewModel from './model/ForgotPasswordViewModel';
import IOsAppVersion from './model/IOsAppVersion';
import LoginViewModel from './model/LoginViewModel';
import ManagerProfile from './model/ManagerProfile';
import OrderModel from './model/OrderModel';
import PasswordModel from './model/PasswordModel';
import PersonalProgramDetailsFull from './model/PersonalProgramDetailsFull';
import PersonalProgramDetailsList from './model/PersonalProgramDetailsList';
import PlatformAsset from './model/PlatformAsset';
import PlatformAssets from './model/PlatformAssets';
import PlatformInfo from './model/PlatformInfo';
import ProfileFullViewModel from './model/ProfileFullViewModel';
import ProfileHeaderViewModel from './model/ProfileHeaderViewModel';
import ProgramChart from './model/ProgramChart';
import ProgramDetails from './model/ProgramDetails';
import ProgramDetailsFull from './model/ProgramDetailsFull';
import ProgramDetailsListStatistic from './model/ProgramDetailsListStatistic';
import ProgramStatistic from './model/ProgramStatistic';
import ProgramsList from './model/ProgramsList';
import RateViewModel from './model/RateViewModel';
import RecoveryCode from './model/RecoveryCode';
import RecoveryCodesViewModel from './model/RecoveryCodesViewModel';
import RegisterInvestorViewModel from './model/RegisterInvestorViewModel';
import RegisterManagerViewModel from './model/RegisterManagerViewModel';
import ResetPasswordViewModel from './model/ResetPasswordViewModel';
import TradesViewModel from './model/TradesViewModel';
import TwoFactorAuthenticator from './model/TwoFactorAuthenticator';
import TwoFactorAuthenticatorConfirm from './model/TwoFactorAuthenticatorConfirm';
import TwoFactorCodeModel from './model/TwoFactorCodeModel';
import TwoFactorStatus from './model/TwoFactorStatus';
import UpdateProfileViewModel from './model/UpdateProfileViewModel';
import UploadResult from './model/UploadResult';
import ValueChartBar from './model/ValueChartBar';
import AuthApi from './api/AuthApi';
import DexchangeApi from './api/DexchangeApi';
import FileApi from './api/FileApi';
import InvestorApi from './api/InvestorApi';
import OefApi from './api/OefApi';
import PlatformApi from './api/PlatformApi';
import ProfileApi from './api/ProfileApi';
import ProgramApi from './api/ProgramApi';
import RateApi from './api/RateApi';


/**
* ERROR_UNKNOWN.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CoreApiV10 = require('index'); // See note below*.
* var xxxSvc = new CoreApiV10.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CoreApiV10.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CoreApiV10.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CoreApiV10.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AmountWithCurrency model constructor.
     * @property {module:model/AmountWithCurrency}
     */
    AmountWithCurrency,

    /**
     * The AndroidAppVersion model constructor.
     * @property {module:model/AndroidAppVersion}
     */
    AndroidAppVersion,

    /**
     * The AndroidVersion model constructor.
     * @property {module:model/AndroidVersion}
     */
    AndroidVersion,

    /**
     * The AssetsValue model constructor.
     * @property {module:model/AssetsValue}
     */
    AssetsValue,

    /**
     * The ChangePasswordViewModel model constructor.
     * @property {module:model/ChangePasswordViewModel}
     */
    ChangePasswordViewModel,

    /**
     * The ChartProgramDetails model constructor.
     * @property {module:model/ChartProgramDetails}
     */
    ChartProgramDetails,

    /**
     * The ChartSimple model constructor.
     * @property {module:model/ChartSimple}
     */
    ChartSimple,

    /**
     * The DExchangeRequest model constructor.
     * @property {module:model/DExchangeRequest}
     */
    DExchangeRequest,

    /**
     * The DExchangeResponse model constructor.
     * @property {module:model/DExchangeResponse}
     */
    DExchangeResponse,

    /**
     * The DashboardChartValue model constructor.
     * @property {module:model/DashboardChartValue}
     */
    DashboardChartValue,

    /**
     * The DashboardPortfolioEvent model constructor.
     * @property {module:model/DashboardPortfolioEvent}
     */
    DashboardPortfolioEvent,

    /**
     * The DashboardPortfolioEvents model constructor.
     * @property {module:model/DashboardPortfolioEvents}
     */
    DashboardPortfolioEvents,

    /**
     * The DashboardProgramDetails model constructor.
     * @property {module:model/DashboardProgramDetails}
     */
    DashboardProgramDetails,

    /**
     * The DashboardProgramsList model constructor.
     * @property {module:model/DashboardProgramsList}
     */
    DashboardProgramsList,

    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage,

    /**
     * The ErrorViewModel model constructor.
     * @property {module:model/ErrorViewModel}
     */
    ErrorViewModel,

    /**
     * The Facet model constructor.
     * @property {module:model/Facet}
     */
    Facet,

    /**
     * The ForgotPasswordViewModel model constructor.
     * @property {module:model/ForgotPasswordViewModel}
     */
    ForgotPasswordViewModel,

    /**
     * The IOsAppVersion model constructor.
     * @property {module:model/IOsAppVersion}
     */
    IOsAppVersion,

    /**
     * The LoginViewModel model constructor.
     * @property {module:model/LoginViewModel}
     */
    LoginViewModel,

    /**
     * The ManagerProfile model constructor.
     * @property {module:model/ManagerProfile}
     */
    ManagerProfile,

    /**
     * The OrderModel model constructor.
     * @property {module:model/OrderModel}
     */
    OrderModel,

    /**
     * The PasswordModel model constructor.
     * @property {module:model/PasswordModel}
     */
    PasswordModel,

    /**
     * The PersonalProgramDetailsFull model constructor.
     * @property {module:model/PersonalProgramDetailsFull}
     */
    PersonalProgramDetailsFull,

    /**
     * The PersonalProgramDetailsList model constructor.
     * @property {module:model/PersonalProgramDetailsList}
     */
    PersonalProgramDetailsList,

    /**
     * The PlatformAsset model constructor.
     * @property {module:model/PlatformAsset}
     */
    PlatformAsset,

    /**
     * The PlatformAssets model constructor.
     * @property {module:model/PlatformAssets}
     */
    PlatformAssets,

    /**
     * The PlatformInfo model constructor.
     * @property {module:model/PlatformInfo}
     */
    PlatformInfo,

    /**
     * The ProfileFullViewModel model constructor.
     * @property {module:model/ProfileFullViewModel}
     */
    ProfileFullViewModel,

    /**
     * The ProfileHeaderViewModel model constructor.
     * @property {module:model/ProfileHeaderViewModel}
     */
    ProfileHeaderViewModel,

    /**
     * The ProgramChart model constructor.
     * @property {module:model/ProgramChart}
     */
    ProgramChart,

    /**
     * The ProgramDetails model constructor.
     * @property {module:model/ProgramDetails}
     */
    ProgramDetails,

    /**
     * The ProgramDetailsFull model constructor.
     * @property {module:model/ProgramDetailsFull}
     */
    ProgramDetailsFull,

    /**
     * The ProgramDetailsListStatistic model constructor.
     * @property {module:model/ProgramDetailsListStatistic}
     */
    ProgramDetailsListStatistic,

    /**
     * The ProgramStatistic model constructor.
     * @property {module:model/ProgramStatistic}
     */
    ProgramStatistic,

    /**
     * The ProgramsList model constructor.
     * @property {module:model/ProgramsList}
     */
    ProgramsList,

    /**
     * The RateViewModel model constructor.
     * @property {module:model/RateViewModel}
     */
    RateViewModel,

    /**
     * The RecoveryCode model constructor.
     * @property {module:model/RecoveryCode}
     */
    RecoveryCode,

    /**
     * The RecoveryCodesViewModel model constructor.
     * @property {module:model/RecoveryCodesViewModel}
     */
    RecoveryCodesViewModel,

    /**
     * The RegisterInvestorViewModel model constructor.
     * @property {module:model/RegisterInvestorViewModel}
     */
    RegisterInvestorViewModel,

    /**
     * The RegisterManagerViewModel model constructor.
     * @property {module:model/RegisterManagerViewModel}
     */
    RegisterManagerViewModel,

    /**
     * The ResetPasswordViewModel model constructor.
     * @property {module:model/ResetPasswordViewModel}
     */
    ResetPasswordViewModel,

    /**
     * The TradesViewModel model constructor.
     * @property {module:model/TradesViewModel}
     */
    TradesViewModel,

    /**
     * The TwoFactorAuthenticator model constructor.
     * @property {module:model/TwoFactorAuthenticator}
     */
    TwoFactorAuthenticator,

    /**
     * The TwoFactorAuthenticatorConfirm model constructor.
     * @property {module:model/TwoFactorAuthenticatorConfirm}
     */
    TwoFactorAuthenticatorConfirm,

    /**
     * The TwoFactorCodeModel model constructor.
     * @property {module:model/TwoFactorCodeModel}
     */
    TwoFactorCodeModel,

    /**
     * The TwoFactorStatus model constructor.
     * @property {module:model/TwoFactorStatus}
     */
    TwoFactorStatus,

    /**
     * The UpdateProfileViewModel model constructor.
     * @property {module:model/UpdateProfileViewModel}
     */
    UpdateProfileViewModel,

    /**
     * The UploadResult model constructor.
     * @property {module:model/UploadResult}
     */
    UploadResult,

    /**
     * The ValueChartBar model constructor.
     * @property {module:model/ValueChartBar}
     */
    ValueChartBar,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The DexchangeApi service constructor.
    * @property {module:api/DexchangeApi}
    */
    DexchangeApi,

    /**
    * The FileApi service constructor.
    * @property {module:api/FileApi}
    */
    FileApi,

    /**
    * The InvestorApi service constructor.
    * @property {module:api/InvestorApi}
    */
    InvestorApi,

    /**
    * The OefApi service constructor.
    * @property {module:api/OefApi}
    */
    OefApi,

    /**
    * The PlatformApi service constructor.
    * @property {module:api/PlatformApi}
    */
    PlatformApi,

    /**
    * The ProfileApi service constructor.
    * @property {module:api/ProfileApi}
    */
    ProfileApi,

    /**
    * The ProgramApi service constructor.
    * @property {module:api/ProgramApi}
    */
    ProgramApi,

    /**
    * The RateApi service constructor.
    * @property {module:api/RateApi}
    */
    RateApi
};
