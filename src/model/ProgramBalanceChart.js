/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProgramBalanceChartElement'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProgramBalanceChartElement'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.ProgramBalanceChart = factory(root.CoreApiV10.ApiClient, root.CoreApiV10.ProgramBalanceChartElement);
  }
}(this, function(ApiClient, ProgramBalanceChartElement) {
  'use strict';




  /**
   * The ProgramBalanceChart model module.
   * @module model/ProgramBalanceChart
   * @version v1.0
   */

  /**
   * Constructs a new <code>ProgramBalanceChart</code>.
   * @alias module:model/ProgramBalanceChart
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>ProgramBalanceChart</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProgramBalanceChart} obj Optional instance to populate.
   * @return {module:model/ProgramBalanceChart} The populated <code>ProgramBalanceChart</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('programCurrencyBalance')) {
        obj['programCurrencyBalance'] = ApiClient.convertToType(data['programCurrencyBalance'], 'Number');
      }
      if (data.hasOwnProperty('programCurrency')) {
        obj['programCurrency'] = ApiClient.convertToType(data['programCurrency'], 'String');
      }
      if (data.hasOwnProperty('balanceChart')) {
        obj['balanceChart'] = ApiClient.convertToType(data['balanceChart'], [ProgramBalanceChartElement]);
      }
      if (data.hasOwnProperty('gvtBalance')) {
        obj['gvtBalance'] = ApiClient.convertToType(data['gvtBalance'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} programCurrencyBalance
   */
  exports.prototype['programCurrencyBalance'] = undefined;
  /**
   * @member {module:model/ProgramBalanceChart.ProgramCurrencyEnum} programCurrency
   */
  exports.prototype['programCurrency'] = undefined;
  /**
   * @member {Array.<module:model/ProgramBalanceChartElement>} balanceChart
   */
  exports.prototype['balanceChart'] = undefined;
  /**
   * @member {Number} gvtBalance
   */
  exports.prototype['gvtBalance'] = undefined;


  /**
   * Allowed values for the <code>programCurrency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProgramCurrencyEnum = {
    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",
    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",
    /**
     * value: "USDT"
     * @const
     */
    "USDT": "USDT",
    /**
     * value: "GVT"
     * @const
     */
    "GVT": "GVT",
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "ADA"
     * @const
     */
    "ADA": "ADA",
    /**
     * value: "XRP"
     * @const
     */
    "XRP": "XRP",
    /**
     * value: "BCH"
     * @const
     */
    "BCH": "BCH",
    /**
     * value: "LTC"
     * @const
     */
    "LTC": "LTC",
    /**
     * value: "DOGE"
     * @const
     */
    "DOGE": "DOGE",
    /**
     * value: "BNB"
     * @const
     */
    "BNB": "BNB",
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR"  };


  return exports;
}));


