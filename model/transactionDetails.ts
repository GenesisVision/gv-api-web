/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ConvertingDetails } from './convertingDetails';
import { Currency } from './currency';
import { ExternalTransactionDetails } from './externalTransactionDetails';
import { MultiWalletTransactionStatus } from './multiWalletTransactionStatus';
import { ProgramTransactionDetails } from './programTransactionDetails';
import { SignalFee } from './signalFee';
import { TransactionDetailsType } from './transactionDetailsType';

import ApiClient from "../ApiClient";

export class TransactionDetails { 
    public 'type'?: TransactionDetailsType;
    public 'programDetails'?: ProgramTransactionDetails;
    public 'convertingDetails'?: ConvertingDetails;
    public 'externalTransactionDetails'?: ExternalTransactionDetails;
    public 'status'?: MultiWalletTransactionStatus;
    public 'signalFees'?: [SignalFee];
    public 'currency'?: Currency;
    public 'currencyName'?: string;
    public 'currencyLogo'?: string;
    public 'gvCommission'?: number;
    public 'gvCommissionCurrency'?: GvCommissionCurrencyEnum;
    public 'gvCommissionPercent'?: number;
    public 'amount'?: number;
    constructor() {
    }

    static constructFromObject(data: {[key: string]: any}, obj: TransactionDetails = new TransactionDetails()): TransactionDetails {
        if (data) {
            if (data.hasOwnProperty('type')) {
                obj['type'] = TransactionDetailsType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('programDetails')) {
                obj['programDetails'] = ProgramTransactionDetails.constructFromObject(data['programDetails']);
            }
            if (data.hasOwnProperty('convertingDetails')) {
                obj['convertingDetails'] = ConvertingDetails.constructFromObject(data['convertingDetails']);
            }
            if (data.hasOwnProperty('externalTransactionDetails')) {
                obj['externalTransactionDetails'] = ExternalTransactionDetails.constructFromObject(data['externalTransactionDetails']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = MultiWalletTransactionStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('signalFees')) {
                obj['signalFees'] = ApiClient.convertToType(data['signalFees'], [SignalFee]);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('currencyName')) {
                obj['currencyName'] = ApiClient.convertToType(data['currencyName'], 'string');
            }
            if (data.hasOwnProperty('currencyLogo')) {
                obj['currencyLogo'] = ApiClient.convertToType(data['currencyLogo'], 'string');
            }
            if (data.hasOwnProperty('gvCommission')) {
                obj['gvCommission'] = ApiClient.convertToType(data['gvCommission'], 'number');
            }
            if (data.hasOwnProperty('gvCommissionCurrency')) {
                obj['gvCommissionCurrency'] = ApiClient.convertToType(data['gvCommissionCurrency'], 'string');
            }
            if (data.hasOwnProperty('gvCommissionPercent')) {
                obj['gvCommissionPercent'] = ApiClient.convertToType(data['gvCommissionPercent'], 'number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'number');
            }
        }
        return obj;
    }
}


type GvCommissionCurrencyEnum = 'Undefined' | 'GVT' | 'ETH' | 'BTC' | 'ADA' | 'USDT' | 'XRP' | 'BCH' | 'LTC' | 'DOGE' | 'BNB' | 'USD' | 'EUR';


//modelGenericEnums.mustache


