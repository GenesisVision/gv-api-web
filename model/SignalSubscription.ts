/**
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AssetDetails } from './AssetDetails';
import { SignalSubscriberInfo } from './SignalSubscriberInfo';
import { SubscriptionMode } from './SubscriptionMode';

import ApiClient from "../ApiClient";

export class SignalSubscription { 
    public 'subscriberInfo': SignalSubscriberInfo;
    public 'asset': AssetDetails;
    public 'status': string;
    public 'subscriptionDate': Date;
    public 'unsubscriptionDate': Date;
    public 'hasSignalAccount': boolean;
    public 'hasActiveSubscription': boolean;
    public 'isExternal': boolean;
    public 'mode': SubscriptionMode;
    public 'detachMode': DetachModeEnum;
    public 'percent': number;
    public 'openTolerancePercent': number;
    public 'fixedVolume': number;
    public 'fixedCurrency': FixedCurrencyEnum;
    public 'totalProfit': number;
    public 'totalVolume': number;

    constructor(data: {[key: string]: any}) { 
        this['subscriberInfo'] = data['subscriberInfo'];
        this['asset'] = data['asset'];
        this['status'] = data['status'];
        this['subscriptionDate'] = data['subscriptionDate'];
        this['unsubscriptionDate'] = data['unsubscriptionDate'];
        this['hasSignalAccount'] = data['hasSignalAccount'];
        this['hasActiveSubscription'] = data['hasActiveSubscription'];
        this['isExternal'] = data['isExternal'];
        this['mode'] = data['mode'];
        this['detachMode'] = data['detachMode'];
        this['percent'] = data['percent'];
        this['openTolerancePercent'] = data['openTolerancePercent'];
        this['fixedVolume'] = data['fixedVolume'];
        this['fixedCurrency'] = data['fixedCurrency'];
        this['totalProfit'] = data['totalProfit'];
        this['totalVolume'] = data['totalVolume'];
    }

    static constructFromObject(data: {[key: string]: any}): SignalSubscription | undefined {
        if (data) {
            return new SignalSubscription({ 
                'subscriberInfo': SignalSubscriberInfo.constructFromObject(data['subscriberInfo']),
                'asset': AssetDetails.constructFromObject(data['asset']),
                'status': ApiClient.convertToType(data['status'], 'string'),
                'subscriptionDate': ApiClient.convertToType(data['subscriptionDate'], 'Date'),
                'unsubscriptionDate': ApiClient.convertToType(data['unsubscriptionDate'], 'Date'),
                'hasSignalAccount': ApiClient.convertToType(data['hasSignalAccount'], 'boolean'),
                'hasActiveSubscription': ApiClient.convertToType(data['hasActiveSubscription'], 'boolean'),
                'isExternal': ApiClient.convertToType(data['isExternal'], 'boolean'),
                'mode': SubscriptionMode.constructFromObject(data['mode']),
                'detachMode': ApiClient.convertToType(data['detachMode'], 'string'),
                'percent': ApiClient.convertToType(data['percent'], 'number'),
                'openTolerancePercent': ApiClient.convertToType(data['openTolerancePercent'], 'number'),
                'fixedVolume': ApiClient.convertToType(data['fixedVolume'], 'number'),
                'fixedCurrency': ApiClient.convertToType(data['fixedCurrency'], 'string'),
                'totalProfit': ApiClient.convertToType(data['totalProfit'], 'number'),
                'totalVolume': ApiClient.convertToType(data['totalVolume'], 'number'),
            });
        }
    }
}


type DetachModeEnum = 'None' | 'ProviderCloseOnly' | 'CloseAllImmediately';
type FixedCurrencyEnum = 'BTC' | 'ETH' | 'USDT' | 'USD' | 'GVT' | 'Undefined' | 'ADA' | 'XRP' | 'BCH' | 'LTC' | 'DOGE' | 'BNB' | 'EUR';



