/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AssetDetails } from './assetDetails';
import { ChangeState } from './changeState';
import { FeeDetails } from './feeDetails';
import { InvestmentEventItemViewModel } from './investmentEventItemViewModel';

import ApiClient from "../ApiClient";

export class InvestmentEventViewModel { 
    public 'title'?: string;
    public 'icon'?: string;
    public 'date'?: Date;
    public 'assetDetails'?: AssetDetails;
    public 'amount'?: number;
    public 'currency'?: CurrencyEnum;
    public 'changeState'?: ChangeState;
    public 'extendedInfo'?: Array<InvestmentEventItemViewModel>;
    public 'feesInfo'?: Array<FeeDetails>;
    public 'totalFeesAmount'?: number;
    public 'totalFeesCurrency'?: TotalFeesCurrencyEnum;
    constructor() {
    }

    static constructFromObject(data: {[key: string]: any}, obj: InvestmentEventViewModel = new InvestmentEventViewModel()): InvestmentEventViewModel {
        if (data) {
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'string');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'string');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('assetDetails')) {
                obj['assetDetails'] = AssetDetails.constructFromObject(data['assetDetails']);
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'string');
            }
            if (data.hasOwnProperty('changeState')) {
                obj['changeState'] = ChangeState.constructFromObject(data['changeState']);
            }
            if (data.hasOwnProperty('extendedInfo')) {
                obj['extendedInfo'] = ApiClient.convertToType(data['extendedInfo'], [InvestmentEventItemViewModel]);
            }
            if (data.hasOwnProperty('feesInfo')) {
                obj['feesInfo'] = ApiClient.convertToType(data['feesInfo'], [FeeDetails]);
            }
            if (data.hasOwnProperty('totalFeesAmount')) {
                obj['totalFeesAmount'] = ApiClient.convertToType(data['totalFeesAmount'], 'number');
            }
            if (data.hasOwnProperty('totalFeesCurrency')) {
                obj['totalFeesCurrency'] = ApiClient.convertToType(data['totalFeesCurrency'], 'string');
            }
        }
        return obj;
    }
}


type CurrencyEnum = 'Undefined' | 'GVT' | 'ETH' | 'BTC' | 'ADA' | 'USDT' | 'XRP' | 'BCH' | 'LTC' | 'DOGE' | 'BNB' | 'USD' | 'EUR';
type TotalFeesCurrencyEnum = 'Undefined' | 'GVT' | 'ETH' | 'BTC' | 'ADA' | 'USDT' | 'XRP' | 'BCH' | 'LTC' | 'DOGE' | 'BNB' | 'USD' | 'EUR';


//modelGenericEnums.mustache


