/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ConvertingDetails from './ConvertingDetails';
import ExternalTransactionDetails from './ExternalTransactionDetails';
import ProgramTransactionDetails from './ProgramTransactionDetails';
import SignalFee from './SignalFee';





/**
 *
 * @interface TransactionDetails
 */

/**
 *
 * @name TransactionDetails#type
 * @type TransactionDetailsTypeEnum
 */
/**
 *
 * @name TransactionDetails#programDetails
 * @type {ProgramTransactionDetails}
 */
/**
 *
 * @name TransactionDetails#convertingDetails
 * @type {ConvertingDetails}
 */
/**
 *
 * @name TransactionDetails#externalTransactionDetails
 * @type {ExternalTransactionDetails}
 */
/**
 *
 * @name TransactionDetails#status
 * @type TransactionDetailsStatusEnum
 */
/**
 *
 * @name TransactionDetails#signalFees
 * @type {Array<SignalFee>}
 */
/**
 *
 * @name TransactionDetails#currency
 * @type TransactionDetailsCurrencyEnum
 */
/**
 *
 * @name TransactionDetails#currencyName
 * @type {String}
 */
/**
 *
 * @name TransactionDetails#currencyLogo
 * @type {String}
 */
/**
 *
 * @name TransactionDetails#gvCommission
 * @type {Number}
 */
/**
 *
 * @name TransactionDetails#gvCommissionCurrency
 * @type TransactionDetailsGvCommissionCurrencyEnum
 */
/**
 *
 * @name TransactionDetails#gvCommissionPercent
 * @type {Number}
 */
/**
 *
 * @name TransactionDetails#amount
 * @type {Number}
 */





export default class TransactionDetails {

    constructor() {
        

        
        

        

        
    }

    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionDetails();

            
            
            

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('programDetails')) {
                obj['programDetails'] = ProgramTransactionDetails.constructFromObject(data['programDetails']);
            }
            if (data.hasOwnProperty('convertingDetails')) {
                obj['convertingDetails'] = ConvertingDetails.constructFromObject(data['convertingDetails']);
            }
            if (data.hasOwnProperty('externalTransactionDetails')) {
                obj['externalTransactionDetails'] = ExternalTransactionDetails.constructFromObject(data['externalTransactionDetails']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('signalFees')) {
                obj['signalFees'] = ApiClient.convertToType(data['signalFees'], [SignalFee]);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('currencyName')) {
                obj['currencyName'] = ApiClient.convertToType(data['currencyName'], 'String');
            }
            if (data.hasOwnProperty('currencyLogo')) {
                obj['currencyLogo'] = ApiClient.convertToType(data['currencyLogo'], 'String');
            }
            if (data.hasOwnProperty('gvCommission')) {
                obj['gvCommission'] = ApiClient.convertToType(data['gvCommission'], 'Number');
            }
            if (data.hasOwnProperty('gvCommissionCurrency')) {
                obj['gvCommissionCurrency'] = ApiClient.convertToType(data['gvCommissionCurrency'], 'String');
            }
            if (data.hasOwnProperty('gvCommissionPercent')) {
                obj['gvCommissionPercent'] = ApiClient.convertToType(data['gvCommissionPercent'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
        }
        return obj;
    }

    type = undefined;
    programDetails = undefined;
    convertingDetails = undefined;
    externalTransactionDetails = undefined;
    status = undefined;
    signalFees = undefined;
    currency = undefined;
    currencyName = undefined;
    currencyLogo = undefined;
    gvCommission = undefined;
    gvCommissionCurrency = undefined;
    gvCommissionPercent = undefined;
    amount = undefined;






    static TypeEnum = {
    
        "Investing": "Investing",
    
        "Withdrawal": "Withdrawal",
    
        "ExternalWithdrawal": "ExternalWithdrawal",
    
        "ExternalDeposit": "ExternalDeposit",
    
        "Converting": "Converting",
    
        "Open": "Open",
    
        "Close": "Close",
    
        "Profit": "Profit",
    
        "PlatformFee": "PlatformFee",
    
        "SubscribeSignal": "SubscribeSignal",
    
        "ReceiveSignal": "ReceiveSignal",
    
        "DepositSignal": "DepositSignal",
    
        "WithdrawalSignal": "WithdrawalSignal",
    
        "Platform": "Platform"    
    };

    static StatusEnum = {
    
        "Done": "Done",
    
        "Pending": "Pending",
    
        "Canceled": "Canceled",
    
        "Error": "Error"    
    };

    static CurrencyEnum = {
    
        "BNB": "BNB",
    
        "USD": "USD",
    
        "EUR": "EUR",
    
        "Undefined": "Undefined",
    
        "GVT": "GVT",
    
        "ETH": "ETH",
    
        "BTC": "BTC",
    
        "ADA": "ADA",
    
        "USDT": "USDT",
    
        "XRP": "XRP",
    
        "BCH": "BCH",
    
        "LTC": "LTC",
    
        "DOGE": "DOGE"    
    };

    static GvCommissionCurrencyEnum = {
    
        "BNB": "BNB",
    
        "USD": "USD",
    
        "EUR": "EUR",
    
        "Undefined": "Undefined",
    
        "GVT": "GVT",
    
        "ETH": "ETH",
    
        "BTC": "BTC",
    
        "ADA": "ADA",
    
        "USDT": "USDT",
    
        "XRP": "XRP",
    
        "BCH": "BCH",
    
        "LTC": "LTC",
    
        "DOGE": "DOGE"    
    };



}




/**
 * @typedef TransactionDetailsTypeEnum 
 * @type {("Investing"|"Withdrawal"|"ExternalWithdrawal"|"ExternalDeposit"|"Converting"|"Open"|"Close"|"Profit"|"PlatformFee"|"SubscribeSignal"|"ReceiveSignal"|"DepositSignal"|"WithdrawalSignal"|"Platform")}
 */

/**
 * @typedef TransactionDetailsStatusEnum 
 * @type {("Done"|"Pending"|"Canceled"|"Error")}
 */

/**
 * @typedef TransactionDetailsCurrencyEnum 
 * @type {("BNB"|"USD"|"EUR"|"Undefined"|"GVT"|"ETH"|"BTC"|"ADA"|"USDT"|"XRP"|"BCH"|"LTC"|"DOGE")}
 */

/**
 * @typedef TransactionDetailsGvCommissionCurrencyEnum 
 * @type {("BNB"|"USD"|"EUR"|"Undefined"|"GVT"|"ETH"|"BTC"|"ADA"|"USDT"|"XRP"|"BCH"|"LTC"|"DOGE")}
 */



