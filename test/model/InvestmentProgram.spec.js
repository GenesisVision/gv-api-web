/**
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoreApi);
  }
}(this, function(expect, CoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CoreApi.InvestmentProgram();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvestmentProgram', function() {
    it('should create an instance of InvestmentProgram', function() {
      // uncomment below and update the code to test InvestmentProgram
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be.a(CoreApi.InvestmentProgram);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property isEnabled (base name: "isEnabled")', function() {
      // uncomment below and update the code to test the property isEnabled
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property balance (base name: "balance")', function() {
      // uncomment below and update the code to test the property balance
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property tradesCount (base name: "tradesCount")', function() {
      // uncomment below and update the code to test the property tradesCount
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property investorsCount (base name: "investorsCount")', function() {
      // uncomment below and update the code to test the property investorsCount
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property periodDuration (base name: "periodDuration")', function() {
      // uncomment below and update the code to test the property periodDuration
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property startOfPeriod (base name: "startOfPeriod")', function() {
      // uncomment below and update the code to test the property startOfPeriod
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property endOfPeriod (base name: "endOfPeriod")', function() {
      // uncomment below and update the code to test the property endOfPeriod
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property profitAvg (base name: "profitAvg")', function() {
      // uncomment below and update the code to test the property profitAvg
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property profitTotal (base name: "profitTotal")', function() {
      // uncomment below and update the code to test the property profitTotal
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property profitAvgPercent (base name: "profitAvgPercent")', function() {
      // uncomment below and update the code to test the property profitAvgPercent
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property profitTotalPercent (base name: "profitTotalPercent")', function() {
      // uncomment below and update the code to test the property profitTotalPercent
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property profitTotalChange (base name: "profitTotalChange")', function() {
      // uncomment below and update the code to test the property profitTotalChange
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property availableInvestment (base name: "availableInvestment")', function() {
      // uncomment below and update the code to test the property availableInvestment
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property feeSuccess (base name: "feeSuccess")', function() {
      // uncomment below and update the code to test the property feeSuccess
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property feeManagement (base name: "feeManagement")', function() {
      // uncomment below and update the code to test the property feeManagement
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property chart (base name: "chart")', function() {
      // uncomment below and update the code to test the property chart
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property equityChart (base name: "equityChart")', function() {
      // uncomment below and update the code to test the property equityChart
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property manager (base name: "manager")', function() {
      // uncomment below and update the code to test the property manager
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property freeTokens (base name: "freeTokens")', function() {
      // uncomment below and update the code to test the property freeTokens
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property hasNewRequests (base name: "hasNewRequests")', function() {
      // uncomment below and update the code to test the property hasNewRequests
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property isInvestEnable (base name: "isInvestEnable")', function() {
      // uncomment below and update the code to test the property isInvestEnable
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property isOwnProgram (base name: "isOwnProgram")', function() {
      // uncomment below and update the code to test the property isOwnProgram
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property canCloseProgram (base name: "canCloseProgram")', function() {
      // uncomment below and update the code to test the property canCloseProgram
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

    it('should have the property isFavorite (base name: "isFavorite")', function() {
      // uncomment below and update the code to test the property isFavorite
      //var instane = new CoreApi.InvestmentProgram();
      //expect(instance).to.be();
    });

  });

}));
