/**
 * Core API v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ProgramDetailsListStatistic model module.
* @module model/ProgramDetailsListStatistic
* @version v2.0
*/
export default class ProgramDetailsListStatistic {
    /**
    * Constructs a new <code>ProgramDetailsListStatistic</code>.
    * @alias module:model/ProgramDetailsListStatistic
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>ProgramDetailsListStatistic</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ProgramDetailsListStatistic} obj Optional instance to populate.
    * @return {module:model/ProgramDetailsListStatistic} The populated <code>ProgramDetailsListStatistic</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProgramDetailsListStatistic();

            
            
            

            if (data.hasOwnProperty('balanceBase')) {
                obj['balanceBase'] = ApiClient.convertToType(data['balanceBase'], 'Number');
            }
            if (data.hasOwnProperty('currencyBase')) {
                obj['currencyBase'] = ApiClient.convertToType(data['currencyBase'], 'String');
            }
            if (data.hasOwnProperty('balanceConverted')) {
                obj['balanceConverted'] = ApiClient.convertToType(data['balanceConverted'], 'Number');
            }
            if (data.hasOwnProperty('currencyConverted')) {
                obj['currencyConverted'] = ApiClient.convertToType(data['currencyConverted'], 'String');
            }
            if (data.hasOwnProperty('investorsCount')) {
                obj['investorsCount'] = ApiClient.convertToType(data['investorsCount'], 'Number');
            }
            if (data.hasOwnProperty('tradesCount')) {
                obj['tradesCount'] = ApiClient.convertToType(data['tradesCount'], 'Number');
            }
            if (data.hasOwnProperty('drawdownPercent')) {
                obj['drawdownPercent'] = ApiClient.convertToType(data['drawdownPercent'], 'Number');
            }
            if (data.hasOwnProperty('profitPercent')) {
                obj['profitPercent'] = ApiClient.convertToType(data['profitPercent'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {Number} balanceBase
    */
    balanceBase = undefined;
    /**
    * @member {module:model/ProgramDetailsListStatistic.CurrencyBaseEnum} currencyBase
    */
    currencyBase = undefined;
    /**
    * @member {Number} balanceConverted
    */
    balanceConverted = undefined;
    /**
    * @member {module:model/ProgramDetailsListStatistic.CurrencyConvertedEnum} currencyConverted
    */
    currencyConverted = undefined;
    /**
    * @member {Number} investorsCount
    */
    investorsCount = undefined;
    /**
    * @member {Number} tradesCount
    */
    tradesCount = undefined;
    /**
    * @member {Number} drawdownPercent
    */
    drawdownPercent = undefined;
    /**
    * @member {Number} profitPercent
    */
    profitPercent = undefined;






    /**
    * Allowed values for the <code>currencyBase</code> property.
    * @enum {String}
    * @readonly
    */
    static CurrencyBaseEnum = {
    
        /**
         * value: "Undefined"
         * @const
         */
        "Undefined": "Undefined",
    
        /**
         * value: "GVT"
         * @const
         */
        "GVT": "GVT",
    
        /**
         * value: "ETH"
         * @const
         */
        "ETH": "ETH",
    
        /**
         * value: "BTC"
         * @const
         */
        "BTC": "BTC",
    
        /**
         * value: "ADA"
         * @const
         */
        "ADA": "ADA",
    
        /**
         * value: "USD"
         * @const
         */
        "USD": "USD",
    
        /**
         * value: "EUR"
         * @const
         */
        "EUR": "EUR"    
    };

    /**
    * Allowed values for the <code>currencyConverted</code> property.
    * @enum {String}
    * @readonly
    */
    static CurrencyConvertedEnum = {
    
        /**
         * value: "Undefined"
         * @const
         */
        "Undefined": "Undefined",
    
        /**
         * value: "GVT"
         * @const
         */
        "GVT": "GVT",
    
        /**
         * value: "ETH"
         * @const
         */
        "ETH": "ETH",
    
        /**
         * value: "BTC"
         * @const
         */
        "BTC": "BTC",
    
        /**
         * value: "ADA"
         * @const
         */
        "ADA": "ADA",
    
        /**
         * value: "USD"
         * @const
         */
        "USD": "USD",
    
        /**
         * value: "EUR"
         * @const
         */
        "EUR": "EUR"    
    };



}


