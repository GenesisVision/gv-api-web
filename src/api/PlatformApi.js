/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CaptchaDetails', 'model/ErrorViewModel', 'model/LevelsParamsInfo', 'model/PlatformInfo', 'model/PlatformStatistic', 'model/ProgramsLevelsInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CaptchaDetails'), require('../model/ErrorViewModel'), require('../model/LevelsParamsInfo'), require('../model/PlatformInfo'), require('../model/PlatformStatistic'), require('../model/ProgramsLevelsInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.PlatformApi = factory(root.CoreApiV10.ApiClient, root.CoreApiV10.CaptchaDetails, root.CoreApiV10.ErrorViewModel, root.CoreApiV10.LevelsParamsInfo, root.CoreApiV10.PlatformInfo, root.CoreApiV10.PlatformStatistic, root.CoreApiV10.ProgramsLevelsInfo);
  }
}(this, function(ApiClient, CaptchaDetails, ErrorViewModel, LevelsParamsInfo, PlatformInfo, PlatformStatistic, ProgramsLevelsInfo) {
  'use strict';

  /**
   * Platform service.
   * @module api/PlatformApi
   * @version v1.0
   */

  /**
   * Constructs a new PlatformApi. 
   * @alias module:api/PlatformApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Server date
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link 'String'} and HTTP response
     */
    this.v10PlatformDatePostWithHttpInfo = function() {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = 'String';

      return this.apiClient.callApi(
        '/v1.0/platform/date', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Server date
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link 'String'}
     */
    this.v10PlatformDatePost = function() {
      return this.v10PlatformDatePostWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Platform info
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PlatformInfo} and HTTP response
     */
    this.v10PlatformInfoGetWithHttpInfo = function() {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = PlatformInfo;

      return this.apiClient.callApi(
        '/v1.0/platform/info', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Platform info
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PlatformInfo}
     */
    this.v10PlatformInfoGet = function() {
      return this.v10PlatformInfoGetWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Investment programs levels
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.currency  (default to 100)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ProgramsLevelsInfo} and HTTP response
     */
    this.v10PlatformLevelsGetWithHttpInfo = function(opts) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'currency': opts['currency'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = ProgramsLevelsInfo;

      return this.apiClient.callApi(
        '/v1.0/platform/levels', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Investment programs levels
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.currency  (default to 100)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ProgramsLevelsInfo}
     */
    this.v10PlatformLevelsGet = function(opts) {
      return this.v10PlatformLevelsGetWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Investment programs levels parameters
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.currency  (default to 104)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LevelsParamsInfo} and HTTP response
     */
    this.v10PlatformLevelsParametersGetWithHttpInfo = function(opts) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'currency': opts['currency'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = LevelsParamsInfo;

      return this.apiClient.callApi(
        '/v1.0/platform/levels/parameters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Investment programs levels parameters
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.currency  (default to 104)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LevelsParamsInfo}
     */
    this.v10PlatformLevelsParametersGet = function(opts) {
      return this.v10PlatformLevelsParametersGetWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Platform captcha details.
     * @param {String} route 
     * @param {Object} opts Optional parameters
     * @param {String} opts.client 
     * @param {String} opts.version 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CaptchaDetails} and HTTP response
     */
    this.v10PlatformRiskcontrolGetWithHttpInfo = function(route, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'route' is set
      if (route === undefined || route === null) {
        throw new Error("Missing the required parameter 'route' when calling v10PlatformRiskcontrolGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'Route': route,
        'Client': opts['client'],
        'Version': opts['version'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = CaptchaDetails;

      return this.apiClient.callApi(
        '/v1.0/platform/riskcontrol', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Platform captcha details.
     * @param {String} route 
     * @param {Object} opts Optional parameters
     * @param {String} opts.client 
     * @param {String} opts.version 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CaptchaDetails}
     */
    this.v10PlatformRiskcontrolGet = function(route, opts) {
      return this.v10PlatformRiskcontrolGetWithHttpInfo(route, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Platform statistic
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PlatformStatistic} and HTTP response
     */
    this.v10PlatformStatisticGetWithHttpInfo = function() {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = PlatformStatistic;

      return this.apiClient.callApi(
        '/v1.0/platform/statistic', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Platform statistic
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PlatformStatistic}
     */
    this.v10PlatformStatisticGet = function() {
      return this.v10PlatformStatisticGetWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
