/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { DashboardChartValue } from './dashboardChartValue';
import { ProfileHeaderViewModel } from './profileHeaderViewModel';
import { ProgramRequestsOld } from './programRequestsOld';

import ApiClient from "../ApiClient";

export class DashboardSummary { 
    public 'chart'?: DashboardChartValue;
    public 'profileHeader'?: ProfileHeaderViewModel;
    public 'programsCount'?: number;
    public 'fundsCount'?: number;
    public 'signalsCount'?: number;
    public 'requests'?: ProgramRequestsOld;
    constructor() {
    }

    static constructFromObject(data: {[key: string]: any}, obj: DashboardSummary = new DashboardSummary()): DashboardSummary {
        if (data) {
            if (data.hasOwnProperty('chart')) {
                obj['chart'] = DashboardChartValue.constructFromObject(data['chart']);
            }
            if (data.hasOwnProperty('profileHeader')) {
                obj['profileHeader'] = ProfileHeaderViewModel.constructFromObject(data['profileHeader']);
            }
            if (data.hasOwnProperty('programsCount')) {
                obj['programsCount'] = ApiClient.convertToType(data['programsCount'], 'number');
            }
            if (data.hasOwnProperty('fundsCount')) {
                obj['fundsCount'] = ApiClient.convertToType(data['fundsCount'], 'number');
            }
            if (data.hasOwnProperty('signalsCount')) {
                obj['signalsCount'] = ApiClient.convertToType(data['signalsCount'], 'number');
            }
            if (data.hasOwnProperty('requests')) {
                obj['requests'] = ProgramRequestsOld.constructFromObject(data['requests']);
            }
        }
        return obj;
    }
}


//modelGenericEnums.mustache


