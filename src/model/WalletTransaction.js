/**
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import InvestmentProgramRequestTxInfo from './InvestmentProgramRequestTxInfo';
import InvestmentProgramTxInfo from './InvestmentProgramTxInfo';
import PaymentTxInfo from './PaymentTxInfo';





/**
* The WalletTransaction model module.
* @module model/WalletTransaction
* @version v1
*/
export default class WalletTransaction {
    /**
    * Constructs a new <code>WalletTransaction</code>.
    * @alias module:model/WalletTransaction
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>WalletTransaction</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/WalletTransaction} obj Optional instance to populate.
    * @return {module:model/WalletTransaction} The populated <code>WalletTransaction</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WalletTransaction();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('walletId')) {
                obj['walletId'] = ApiClient.convertToType(data['walletId'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('investmentProgram')) {
                obj['investmentProgram'] = InvestmentProgramTxInfo.constructFromObject(data['investmentProgram']);
            }
            if (data.hasOwnProperty('investmentProgramRequest')) {
                obj['investmentProgramRequest'] = InvestmentProgramRequestTxInfo.constructFromObject(data['investmentProgramRequest']);
            }
            if (data.hasOwnProperty('paymentTx')) {
                obj['paymentTx'] = PaymentTxInfo.constructFromObject(data['paymentTx']);
            }
        }
        return obj;
    }

    /**
    * @member {String} id
    */
    id = undefined;
    /**
    * @member {module:model/WalletTransaction.TypeEnum} type
    */
    type = undefined;
    /**
    * @member {Number} amount
    */
    amount = undefined;
    /**
    * @member {Date} date
    */
    date = undefined;
    /**
    * @member {String} walletId
    */
    walletId = undefined;
    /**
    * @member {module:model/WalletTransaction.CurrencyEnum} currency
    */
    currency = undefined;
    /**
    * @member {module:model/InvestmentProgramTxInfo} investmentProgram
    */
    investmentProgram = undefined;
    /**
    * @member {module:model/InvestmentProgramRequestTxInfo} investmentProgramRequest
    */
    investmentProgramRequest = undefined;
    /**
    * @member {module:model/PaymentTxInfo} paymentTx
    */
    paymentTx = undefined;






    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
    
        /**
         * value: "Deposit"
         * @const
         */
        "Deposit": "Deposit",
    
        /**
         * value: "Withdraw"
         * @const
         */
        "Withdraw": "Withdraw",
    
        /**
         * value: "OpenProgram"
         * @const
         */
        "OpenProgram": "OpenProgram",
    
        /**
         * value: "InvestToProgram"
         * @const
         */
        "InvestToProgram": "InvestToProgram",
    
        /**
         * value: "WithdrawFromProgram"
         * @const
         */
        "WithdrawFromProgram": "WithdrawFromProgram",
    
        /**
         * value: "ProfitFromProgram"
         * @const
         */
        "ProfitFromProgram": "ProfitFromProgram",
    
        /**
         * value: "CancelInvestmentRequest"
         * @const
         */
        "CancelInvestmentRequest": "CancelInvestmentRequest",
    
        /**
         * value: "PartialInvestmentExecutionRefund"
         * @const
         */
        "PartialInvestmentExecutionRefund": "PartialInvestmentExecutionRefund",
    
        /**
         * value: "ClosingProgramRefund"
         * @const
         */
        "ClosingProgramRefund": "ClosingProgramRefund"    
    };

    /**
    * Allowed values for the <code>currency</code> property.
    * @enum {String}
    * @readonly
    */
    static CurrencyEnum = {
    
        /**
         * value: "Undefined"
         * @const
         */
        "Undefined": "Undefined",
    
        /**
         * value: "GVT"
         * @const
         */
        "GVT": "GVT",
    
        /**
         * value: "ETH"
         * @const
         */
        "ETH": "ETH",
    
        /**
         * value: "BTC"
         * @const
         */
        "BTC": "BTC",
    
        /**
         * value: "ADA"
         * @const
         */
        "ADA": "ADA",
    
        /**
         * value: "USD"
         * @const
         */
        "USD": "USD",
    
        /**
         * value: "EUR"
         * @const
         */
        "EUR": "EUR"    
    };



}


