/**
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { OrderModelSignalData } from './OrderModelSignalData';
import { TradeDirectionType } from './TradeDirectionType';
import { TradeEntryType } from './TradeEntryType';

import ApiClient from "../ApiClient";

export class OrderModel { 
    public 'id': string;
    public 'login': string;
    public 'ticket': string;
    public 'symbol': string;
    public 'volume': number;
    public 'profit': number;
    public 'profitCurrency': string;
    public 'direction': TradeDirectionType;
    public 'date': Date;
    public 'price': number;
    public 'priceCurrent': number;
    public 'entry': TradeEntryType;
    public 'baseVolume': number;
    public 'originalCommission': number;
    public 'originalCommissionCurrency': string;
    public 'commission': number;
    public 'swap': number;
    public 'showOriginalCommission': boolean;
    public 'signalData': OrderModelSignalData;

    constructor(data: {[key: string]: any}) { 
        this['id'] = data['id'];
        this['login'] = data['login'];
        this['ticket'] = data['ticket'];
        this['symbol'] = data['symbol'];
        this['volume'] = data['volume'];
        this['profit'] = data['profit'];
        this['profitCurrency'] = data['profitCurrency'];
        this['direction'] = data['direction'];
        this['date'] = data['date'];
        this['price'] = data['price'];
        this['priceCurrent'] = data['priceCurrent'];
        this['entry'] = data['entry'];
        this['baseVolume'] = data['baseVolume'];
        this['originalCommission'] = data['originalCommission'];
        this['originalCommissionCurrency'] = data['originalCommissionCurrency'];
        this['commission'] = data['commission'];
        this['swap'] = data['swap'];
        this['showOriginalCommission'] = data['showOriginalCommission'];
        this['signalData'] = data['signalData'];
    }

    static constructFromObject(data: {[key: string]: any}): OrderModel | undefined {
        if (data) {
            return new OrderModel({ 
                'id': ApiClient.convertToType(data['id'], 'string'),
                'login': ApiClient.convertToType(data['login'], 'string'),
                'ticket': ApiClient.convertToType(data['ticket'], 'string'),
                'symbol': ApiClient.convertToType(data['symbol'], 'string'),
                'volume': ApiClient.convertToType(data['volume'], 'number'),
                'profit': ApiClient.convertToType(data['profit'], 'number'),
                'profitCurrency': ApiClient.convertToType(data['profitCurrency'], 'string'),
                'direction': TradeDirectionType.constructFromObject(data['direction']),
                'date': ApiClient.convertToType(data['date'], 'Date'),
                'price': ApiClient.convertToType(data['price'], 'number'),
                'priceCurrent': ApiClient.convertToType(data['priceCurrent'], 'number'),
                'entry': TradeEntryType.constructFromObject(data['entry']),
                'baseVolume': ApiClient.convertToType(data['baseVolume'], 'number'),
                'originalCommission': ApiClient.convertToType(data['originalCommission'], 'number'),
                'originalCommissionCurrency': ApiClient.convertToType(data['originalCommissionCurrency'], 'string'),
                'commission': ApiClient.convertToType(data['commission'], 'number'),
                'swap': ApiClient.convertToType(data['swap'], 'number'),
                'showOriginalCommission': ApiClient.convertToType(data['showOriginalCommission'], 'boolean'),
                'signalData': OrderModelSignalData.constructFromObject(data['signalData']),
            });
        }
    }
}



