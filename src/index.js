/**
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AndroidAppVersion from './model/AndroidAppVersion';
import AndroidVersion from './model/AndroidVersion';
import Broker from './model/Broker';
import BrokerInitData from './model/BrokerInitData';
import BrokerInvestmentProgram from './model/BrokerInvestmentProgram';
import BrokerTradeServer from './model/BrokerTradeServer';
import BrokersFilter from './model/BrokersFilter';
import BrokersViewModel from './model/BrokersViewModel';
import ChangePasswordViewModel from './model/ChangePasswordViewModel';
import Chart from './model/Chart';
import ChartByDate from './model/ChartByDate';
import ClosePeriodData from './model/ClosePeriodData';
import DateChart from './model/DateChart';
import EndOfNextPeriod from './model/EndOfNextPeriod';
import ErrorMessage from './model/ErrorMessage';
import ErrorViewModel from './model/ErrorViewModel';
import ForgotPasswordViewModel from './model/ForgotPasswordViewModel';
import FreeTokens from './model/FreeTokens';
import IFormFile from './model/IFormFile';
import IOsAppVersion from './model/IOsAppVersion';
import Invest from './model/Invest';
import InvestmentProgram from './model/InvestmentProgram';
import InvestmentProgramAccrual from './model/InvestmentProgramAccrual';
import InvestmentProgramBuyToken from './model/InvestmentProgramBuyToken';
import InvestmentProgramDashboardInvestor from './model/InvestmentProgramDashboardInvestor';
import InvestmentProgramDashboardManager from './model/InvestmentProgramDashboardManager';
import InvestmentProgramDetails from './model/InvestmentProgramDetails';
import InvestmentProgramRequest from './model/InvestmentProgramRequest';
import InvestmentProgramRequestTxInfo from './model/InvestmentProgramRequestTxInfo';
import InvestmentProgramRequests from './model/InvestmentProgramRequests';
import InvestmentProgramRequestsFilter from './model/InvestmentProgramRequestsFilter';
import InvestmentProgramTxInfo from './model/InvestmentProgramTxInfo';
import InvestmentProgramUpdate from './model/InvestmentProgramUpdate';
import InvestmentProgramViewModel from './model/InvestmentProgramViewModel';
import InvestmentProgramsFilter from './model/InvestmentProgramsFilter';
import InvestmentProgramsViewModel from './model/InvestmentProgramsViewModel';
import InvestorAmount from './model/InvestorAmount';
import InvestorDashboard from './model/InvestorDashboard';
import LoginViewModel from './model/LoginViewModel';
import ManagerAccountOnlineInfo from './model/ManagerAccountOnlineInfo';
import ManagerDashboardProgramsFilter from './model/ManagerDashboardProgramsFilter';
import ManagerDashboardStatistic from './model/ManagerDashboardStatistic';
import ManagerFundChart from './model/ManagerFundChart';
import ManagerHistoryIpfsHash from './model/ManagerHistoryIpfsHash';
import ManagerInvestmentPrograms from './model/ManagerInvestmentPrograms';
import ManagerIpfsHash from './model/ManagerIpfsHash';
import ManagerLevelStatistic from './model/ManagerLevelStatistic';
import ManagerOpenTrades from './model/ManagerOpenTrades';
import ManagerProfitChart from './model/ManagerProfitChart';
import ManagerProfitChartData from './model/ManagerProfitChartData';
import ManagerRequest from './model/ManagerRequest';
import NewInvestmentRequest from './model/NewInvestmentRequest';
import NewManager from './model/NewManager';
import NewOpenTradesEvent from './model/NewOpenTradesEvent';
import NewTournamentAccountRequest from './model/NewTournamentAccountRequest';
import NewTradeEvent from './model/NewTradeEvent';
import OpenOrderModel from './model/OpenOrderModel';
import OpenTradesViewModel from './model/OpenTradesViewModel';
import OrderModel from './model/OrderModel';
import PasswordModel from './model/PasswordModel';
import PaymentTxInfo from './model/PaymentTxInfo';
import Period from './model/Period';
import PeriodProfitDiagram from './model/PeriodProfitDiagram';
import PlatformStatus from './model/PlatformStatus';
import ProfileFullViewModel from './model/ProfileFullViewModel';
import ProfilePublicViewModel from './model/ProfilePublicViewModel';
import ProgramBalances from './model/ProgramBalances';
import RateViewModel from './model/RateViewModel';
import RecoveryCode from './model/RecoveryCode';
import RecoveryCodesViewModel from './model/RecoveryCodesViewModel';
import RegisterInvestorViewModel from './model/RegisterInvestorViewModel';
import RegisterManagerViewModel from './model/RegisterManagerViewModel';
import RequestRate from './model/RequestRate';
import ResetPasswordViewModel from './model/ResetPasswordViewModel';
import StartValues from './model/StartValues';
import Token from './model/Token';
import TradeChart from './model/TradeChart';
import TradesChartViewModel from './model/TradesChartViewModel';
import TradesFilter from './model/TradesFilter';
import TradesViewModel from './model/TradesViewModel';
import TransactionsFilter from './model/TransactionsFilter';
import TwoFactorAuthenticator from './model/TwoFactorAuthenticator';
import TwoFactorAuthenticatorConfirm from './model/TwoFactorAuthenticatorConfirm';
import TwoFactorCodeModel from './model/TwoFactorCodeModel';
import TwoFactorStatus from './model/TwoFactorStatus';
import UpdateProfileViewModel from './model/UpdateProfileViewModel';
import UploadResult from './model/UploadResult';
import WalletAddressViewModel from './model/WalletAddressViewModel';
import WalletInvestmentProgram from './model/WalletInvestmentProgram';
import WalletInvestmentPrograms from './model/WalletInvestmentPrograms';
import WalletStatistic from './model/WalletStatistic';
import WalletStatisticFilter from './model/WalletStatisticFilter';
import WalletTransaction from './model/WalletTransaction';
import WalletTransactionsViewModel from './model/WalletTransactionsViewModel';
import WalletViewModel from './model/WalletViewModel';
import WalletWithdrawRequestModel from './model/WalletWithdrawRequestModel';
import WalletsViewModel from './model/WalletsViewModel';
import BrokerApi from './api/BrokerApi';
import FilesApi from './api/FilesApi';
import InvestorApi from './api/InvestorApi';
import ManagerApi from './api/ManagerApi';
import RateApi from './api/RateApi';
import TradesApi from './api/TradesApi';


/**
* ERROR_UNKNOWN.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CoreApi = require('index'); // See note below*.
* var xxxSvc = new CoreApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CoreApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CoreApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CoreApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AndroidAppVersion model constructor.
     * @property {module:model/AndroidAppVersion}
     */
    AndroidAppVersion,

    /**
     * The AndroidVersion model constructor.
     * @property {module:model/AndroidVersion}
     */
    AndroidVersion,

    /**
     * The Broker model constructor.
     * @property {module:model/Broker}
     */
    Broker,

    /**
     * The BrokerInitData model constructor.
     * @property {module:model/BrokerInitData}
     */
    BrokerInitData,

    /**
     * The BrokerInvestmentProgram model constructor.
     * @property {module:model/BrokerInvestmentProgram}
     */
    BrokerInvestmentProgram,

    /**
     * The BrokerTradeServer model constructor.
     * @property {module:model/BrokerTradeServer}
     */
    BrokerTradeServer,

    /**
     * The BrokersFilter model constructor.
     * @property {module:model/BrokersFilter}
     */
    BrokersFilter,

    /**
     * The BrokersViewModel model constructor.
     * @property {module:model/BrokersViewModel}
     */
    BrokersViewModel,

    /**
     * The ChangePasswordViewModel model constructor.
     * @property {module:model/ChangePasswordViewModel}
     */
    ChangePasswordViewModel,

    /**
     * The Chart model constructor.
     * @property {module:model/Chart}
     */
    Chart,

    /**
     * The ChartByDate model constructor.
     * @property {module:model/ChartByDate}
     */
    ChartByDate,

    /**
     * The ClosePeriodData model constructor.
     * @property {module:model/ClosePeriodData}
     */
    ClosePeriodData,

    /**
     * The DateChart model constructor.
     * @property {module:model/DateChart}
     */
    DateChart,

    /**
     * The EndOfNextPeriod model constructor.
     * @property {module:model/EndOfNextPeriod}
     */
    EndOfNextPeriod,

    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage,

    /**
     * The ErrorViewModel model constructor.
     * @property {module:model/ErrorViewModel}
     */
    ErrorViewModel,

    /**
     * The ForgotPasswordViewModel model constructor.
     * @property {module:model/ForgotPasswordViewModel}
     */
    ForgotPasswordViewModel,

    /**
     * The FreeTokens model constructor.
     * @property {module:model/FreeTokens}
     */
    FreeTokens,

    /**
     * The IFormFile model constructor.
     * @property {module:model/IFormFile}
     */
    IFormFile,

    /**
     * The IOsAppVersion model constructor.
     * @property {module:model/IOsAppVersion}
     */
    IOsAppVersion,

    /**
     * The Invest model constructor.
     * @property {module:model/Invest}
     */
    Invest,

    /**
     * The InvestmentProgram model constructor.
     * @property {module:model/InvestmentProgram}
     */
    InvestmentProgram,

    /**
     * The InvestmentProgramAccrual model constructor.
     * @property {module:model/InvestmentProgramAccrual}
     */
    InvestmentProgramAccrual,

    /**
     * The InvestmentProgramBuyToken model constructor.
     * @property {module:model/InvestmentProgramBuyToken}
     */
    InvestmentProgramBuyToken,

    /**
     * The InvestmentProgramDashboardInvestor model constructor.
     * @property {module:model/InvestmentProgramDashboardInvestor}
     */
    InvestmentProgramDashboardInvestor,

    /**
     * The InvestmentProgramDashboardManager model constructor.
     * @property {module:model/InvestmentProgramDashboardManager}
     */
    InvestmentProgramDashboardManager,

    /**
     * The InvestmentProgramDetails model constructor.
     * @property {module:model/InvestmentProgramDetails}
     */
    InvestmentProgramDetails,

    /**
     * The InvestmentProgramRequest model constructor.
     * @property {module:model/InvestmentProgramRequest}
     */
    InvestmentProgramRequest,

    /**
     * The InvestmentProgramRequestTxInfo model constructor.
     * @property {module:model/InvestmentProgramRequestTxInfo}
     */
    InvestmentProgramRequestTxInfo,

    /**
     * The InvestmentProgramRequests model constructor.
     * @property {module:model/InvestmentProgramRequests}
     */
    InvestmentProgramRequests,

    /**
     * The InvestmentProgramRequestsFilter model constructor.
     * @property {module:model/InvestmentProgramRequestsFilter}
     */
    InvestmentProgramRequestsFilter,

    /**
     * The InvestmentProgramTxInfo model constructor.
     * @property {module:model/InvestmentProgramTxInfo}
     */
    InvestmentProgramTxInfo,

    /**
     * The InvestmentProgramUpdate model constructor.
     * @property {module:model/InvestmentProgramUpdate}
     */
    InvestmentProgramUpdate,

    /**
     * The InvestmentProgramViewModel model constructor.
     * @property {module:model/InvestmentProgramViewModel}
     */
    InvestmentProgramViewModel,

    /**
     * The InvestmentProgramsFilter model constructor.
     * @property {module:model/InvestmentProgramsFilter}
     */
    InvestmentProgramsFilter,

    /**
     * The InvestmentProgramsViewModel model constructor.
     * @property {module:model/InvestmentProgramsViewModel}
     */
    InvestmentProgramsViewModel,

    /**
     * The InvestorAmount model constructor.
     * @property {module:model/InvestorAmount}
     */
    InvestorAmount,

    /**
     * The InvestorDashboard model constructor.
     * @property {module:model/InvestorDashboard}
     */
    InvestorDashboard,

    /**
     * The LoginViewModel model constructor.
     * @property {module:model/LoginViewModel}
     */
    LoginViewModel,

    /**
     * The ManagerAccountOnlineInfo model constructor.
     * @property {module:model/ManagerAccountOnlineInfo}
     */
    ManagerAccountOnlineInfo,

    /**
     * The ManagerDashboardProgramsFilter model constructor.
     * @property {module:model/ManagerDashboardProgramsFilter}
     */
    ManagerDashboardProgramsFilter,

    /**
     * The ManagerDashboardStatistic model constructor.
     * @property {module:model/ManagerDashboardStatistic}
     */
    ManagerDashboardStatistic,

    /**
     * The ManagerFundChart model constructor.
     * @property {module:model/ManagerFundChart}
     */
    ManagerFundChart,

    /**
     * The ManagerHistoryIpfsHash model constructor.
     * @property {module:model/ManagerHistoryIpfsHash}
     */
    ManagerHistoryIpfsHash,

    /**
     * The ManagerInvestmentPrograms model constructor.
     * @property {module:model/ManagerInvestmentPrograms}
     */
    ManagerInvestmentPrograms,

    /**
     * The ManagerIpfsHash model constructor.
     * @property {module:model/ManagerIpfsHash}
     */
    ManagerIpfsHash,

    /**
     * The ManagerLevelStatistic model constructor.
     * @property {module:model/ManagerLevelStatistic}
     */
    ManagerLevelStatistic,

    /**
     * The ManagerOpenTrades model constructor.
     * @property {module:model/ManagerOpenTrades}
     */
    ManagerOpenTrades,

    /**
     * The ManagerProfitChart model constructor.
     * @property {module:model/ManagerProfitChart}
     */
    ManagerProfitChart,

    /**
     * The ManagerProfitChartData model constructor.
     * @property {module:model/ManagerProfitChartData}
     */
    ManagerProfitChartData,

    /**
     * The ManagerRequest model constructor.
     * @property {module:model/ManagerRequest}
     */
    ManagerRequest,

    /**
     * The NewInvestmentRequest model constructor.
     * @property {module:model/NewInvestmentRequest}
     */
    NewInvestmentRequest,

    /**
     * The NewManager model constructor.
     * @property {module:model/NewManager}
     */
    NewManager,

    /**
     * The NewOpenTradesEvent model constructor.
     * @property {module:model/NewOpenTradesEvent}
     */
    NewOpenTradesEvent,

    /**
     * The NewTournamentAccountRequest model constructor.
     * @property {module:model/NewTournamentAccountRequest}
     */
    NewTournamentAccountRequest,

    /**
     * The NewTradeEvent model constructor.
     * @property {module:model/NewTradeEvent}
     */
    NewTradeEvent,

    /**
     * The OpenOrderModel model constructor.
     * @property {module:model/OpenOrderModel}
     */
    OpenOrderModel,

    /**
     * The OpenTradesViewModel model constructor.
     * @property {module:model/OpenTradesViewModel}
     */
    OpenTradesViewModel,

    /**
     * The OrderModel model constructor.
     * @property {module:model/OrderModel}
     */
    OrderModel,

    /**
     * The PasswordModel model constructor.
     * @property {module:model/PasswordModel}
     */
    PasswordModel,

    /**
     * The PaymentTxInfo model constructor.
     * @property {module:model/PaymentTxInfo}
     */
    PaymentTxInfo,

    /**
     * The Period model constructor.
     * @property {module:model/Period}
     */
    Period,

    /**
     * The PeriodProfitDiagram model constructor.
     * @property {module:model/PeriodProfitDiagram}
     */
    PeriodProfitDiagram,

    /**
     * The PlatformStatus model constructor.
     * @property {module:model/PlatformStatus}
     */
    PlatformStatus,

    /**
     * The ProfileFullViewModel model constructor.
     * @property {module:model/ProfileFullViewModel}
     */
    ProfileFullViewModel,

    /**
     * The ProfilePublicViewModel model constructor.
     * @property {module:model/ProfilePublicViewModel}
     */
    ProfilePublicViewModel,

    /**
     * The ProgramBalances model constructor.
     * @property {module:model/ProgramBalances}
     */
    ProgramBalances,

    /**
     * The RateViewModel model constructor.
     * @property {module:model/RateViewModel}
     */
    RateViewModel,

    /**
     * The RecoveryCode model constructor.
     * @property {module:model/RecoveryCode}
     */
    RecoveryCode,

    /**
     * The RecoveryCodesViewModel model constructor.
     * @property {module:model/RecoveryCodesViewModel}
     */
    RecoveryCodesViewModel,

    /**
     * The RegisterInvestorViewModel model constructor.
     * @property {module:model/RegisterInvestorViewModel}
     */
    RegisterInvestorViewModel,

    /**
     * The RegisterManagerViewModel model constructor.
     * @property {module:model/RegisterManagerViewModel}
     */
    RegisterManagerViewModel,

    /**
     * The RequestRate model constructor.
     * @property {module:model/RequestRate}
     */
    RequestRate,

    /**
     * The ResetPasswordViewModel model constructor.
     * @property {module:model/ResetPasswordViewModel}
     */
    ResetPasswordViewModel,

    /**
     * The StartValues model constructor.
     * @property {module:model/StartValues}
     */
    StartValues,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The TradeChart model constructor.
     * @property {module:model/TradeChart}
     */
    TradeChart,

    /**
     * The TradesChartViewModel model constructor.
     * @property {module:model/TradesChartViewModel}
     */
    TradesChartViewModel,

    /**
     * The TradesFilter model constructor.
     * @property {module:model/TradesFilter}
     */
    TradesFilter,

    /**
     * The TradesViewModel model constructor.
     * @property {module:model/TradesViewModel}
     */
    TradesViewModel,

    /**
     * The TransactionsFilter model constructor.
     * @property {module:model/TransactionsFilter}
     */
    TransactionsFilter,

    /**
     * The TwoFactorAuthenticator model constructor.
     * @property {module:model/TwoFactorAuthenticator}
     */
    TwoFactorAuthenticator,

    /**
     * The TwoFactorAuthenticatorConfirm model constructor.
     * @property {module:model/TwoFactorAuthenticatorConfirm}
     */
    TwoFactorAuthenticatorConfirm,

    /**
     * The TwoFactorCodeModel model constructor.
     * @property {module:model/TwoFactorCodeModel}
     */
    TwoFactorCodeModel,

    /**
     * The TwoFactorStatus model constructor.
     * @property {module:model/TwoFactorStatus}
     */
    TwoFactorStatus,

    /**
     * The UpdateProfileViewModel model constructor.
     * @property {module:model/UpdateProfileViewModel}
     */
    UpdateProfileViewModel,

    /**
     * The UploadResult model constructor.
     * @property {module:model/UploadResult}
     */
    UploadResult,

    /**
     * The WalletAddressViewModel model constructor.
     * @property {module:model/WalletAddressViewModel}
     */
    WalletAddressViewModel,

    /**
     * The WalletInvestmentProgram model constructor.
     * @property {module:model/WalletInvestmentProgram}
     */
    WalletInvestmentProgram,

    /**
     * The WalletInvestmentPrograms model constructor.
     * @property {module:model/WalletInvestmentPrograms}
     */
    WalletInvestmentPrograms,

    /**
     * The WalletStatistic model constructor.
     * @property {module:model/WalletStatistic}
     */
    WalletStatistic,

    /**
     * The WalletStatisticFilter model constructor.
     * @property {module:model/WalletStatisticFilter}
     */
    WalletStatisticFilter,

    /**
     * The WalletTransaction model constructor.
     * @property {module:model/WalletTransaction}
     */
    WalletTransaction,

    /**
     * The WalletTransactionsViewModel model constructor.
     * @property {module:model/WalletTransactionsViewModel}
     */
    WalletTransactionsViewModel,

    /**
     * The WalletViewModel model constructor.
     * @property {module:model/WalletViewModel}
     */
    WalletViewModel,

    /**
     * The WalletWithdrawRequestModel model constructor.
     * @property {module:model/WalletWithdrawRequestModel}
     */
    WalletWithdrawRequestModel,

    /**
     * The WalletsViewModel model constructor.
     * @property {module:model/WalletsViewModel}
     */
    WalletsViewModel,

    /**
    * The BrokerApi service constructor.
    * @property {module:api/BrokerApi}
    */
    BrokerApi,

    /**
    * The FilesApi service constructor.
    * @property {module:api/FilesApi}
    */
    FilesApi,

    /**
    * The InvestorApi service constructor.
    * @property {module:api/InvestorApi}
    */
    InvestorApi,

    /**
    * The ManagerApi service constructor.
    * @property {module:api/ManagerApi}
    */
    ManagerApi,

    /**
    * The RateApi service constructor.
    * @property {module:api/RateApi}
    */
    RateApi,

    /**
    * The TradesApi service constructor.
    * @property {module:api/TradesApi}
    */
    TradesApi
};
