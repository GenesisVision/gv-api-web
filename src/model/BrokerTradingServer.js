/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The BrokerTradingServer model module.
* @module model/BrokerTradingServer
* @version v1.0
*/
export default class BrokerTradingServer {
    /**
    * Constructs a new <code>BrokerTradingServer</code>.
    * @alias module:model/BrokerTradingServer
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>BrokerTradingServer</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/BrokerTradingServer} obj Optional instance to populate.
    * @return {module:model/BrokerTradingServer} The populated <code>BrokerTradingServer</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerTradingServer();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('storeName')) {
                obj['storeName'] = ApiClient.convertToType(data['storeName'], 'String');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('leverages')) {
                obj['leverages'] = ApiClient.convertToType(data['leverages'], ['Number']);
            }
            if (data.hasOwnProperty('currencies')) {
                obj['currencies'] = ApiClient.convertToType(data['currencies'], ['String']);
            }
        }
        return obj;
    }

    /**
    * @member {String} id
    */
    id = undefined;
    /**
    * @member {String} name
    */
    name = undefined;
    /**
    * @member {String} description
    */
    description = undefined;
    /**
    * @member {String} storeName
    */
    storeName = undefined;
    /**
    * @member {String} host
    */
    host = undefined;
    /**
    * @member {module:model/BrokerTradingServer.TypeEnum} type
    */
    type = undefined;
    /**
    * @member {Array.<Number>} leverages
    */
    leverages = undefined;
    /**
    * @member {Array.<String>} currencies
    */
    currencies = undefined;






    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
    
        /**
         * value: "Undefined"
         * @const
         */
        "Undefined": "Undefined",
    
        /**
         * value: "MetaTrader4"
         * @const
         */
        "MetaTrader4": "MetaTrader4",
    
        /**
         * value: "MetaTrader5"
         * @const
         */
        "MetaTrader5": "MetaTrader5",
    
        /**
         * value: "NinjaTrader"
         * @const
         */
        "NinjaTrader": "NinjaTrader",
    
        /**
         * value: "cTrader"
         * @const
         */
        "cTrader": "cTrader",
    
        /**
         * value: "Rumus"
         * @const
         */
        "Rumus": "Rumus",
    
        /**
         * value: "Metastock"
         * @const
         */
        "Metastock": "Metastock",
    
        /**
         * value: "IDEX"
         * @const
         */
        "IDEX": "IDEX"    
    };



}


