/**
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CoreApiV10) {
      root.CoreApiV10 = {};
    }
    root.CoreApiV10.BrokerAccountType = factory(root.CoreApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BrokerAccountType model module.
   * @module model/BrokerAccountType
   * @version v1.0
   */

  /**
   * Constructs a new <code>BrokerAccountType</code>.
   * @alias module:model/BrokerAccountType
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>BrokerAccountType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BrokerAccountType} obj Optional instance to populate.
   * @return {module:model/BrokerAccountType} The populated <code>BrokerAccountType</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('leverages')) {
        obj['leverages'] = ApiClient.convertToType(data['leverages'], ['Number']);
      }
      if (data.hasOwnProperty('currencies')) {
        obj['currencies'] = ApiClient.convertToType(data['currencies'], ['String']);
      }
      if (data.hasOwnProperty('minimumDepositsAmount')) {
        obj['minimumDepositsAmount'] = ApiClient.convertToType(data['minimumDepositsAmount'], {'String': 'Number'});
      }
      if (data.hasOwnProperty('isForex')) {
        obj['isForex'] = ApiClient.convertToType(data['isForex'], 'Boolean');
      }
      if (data.hasOwnProperty('isSignalsAvailable')) {
        obj['isSignalsAvailable'] = ApiClient.convertToType(data['isSignalsAvailable'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/BrokerAccountType.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {Array.<Number>} leverages
   */
  exports.prototype['leverages'] = undefined;
  /**
   * @member {Array.<String>} currencies
   */
  exports.prototype['currencies'] = undefined;
  /**
   * @member {Object.<String, Number>} minimumDepositsAmount
   */
  exports.prototype['minimumDepositsAmount'] = undefined;
  /**
   * @member {Boolean} isForex
   */
  exports.prototype['isForex'] = undefined;
  /**
   * @member {Boolean} isSignalsAvailable
   */
  exports.prototype['isSignalsAvailable'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "MetaTrader4"
     * @const
     */
    "MetaTrader4": "MetaTrader4",
    /**
     * value: "MetaTrader5"
     * @const
     */
    "MetaTrader5": "MetaTrader5",
    /**
     * value: "NinjaTrader"
     * @const
     */
    "NinjaTrader": "NinjaTrader",
    /**
     * value: "cTrader"
     * @const
     */
    "cTrader": "cTrader",
    /**
     * value: "Rumus"
     * @const
     */
    "Rumus": "Rumus",
    /**
     * value: "Metastock"
     * @const
     */
    "Metastock": "Metastock",
    /**
     * value: "Huobi"
     * @const
     */
    "Huobi": "Huobi"  };


  return exports;
}));


